[{"E:\\semester 7\\ACLfrontend\\acl\\src\\index.js":"1","E:\\semester 7\\ACLfrontend\\acl\\src\\App.js":"2","E:\\semester 7\\ACLfrontend\\acl\\src\\configStore.js":"3","E:\\semester 7\\ACLfrontend\\acl\\src\\serviceWorker.js":"4","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Notification.js":"5","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\LogIn.js":"6","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Welcome.js":"7","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\ProfilesList.js":"8","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Courses.js":"9","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Faculty.js":"10","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\MyProfile.js":"11","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Schedule.js":"12","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Attendance.js":"13","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Department.js":"14","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Slots.js":"15","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Location.js":"16","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\CourseDetails.js":"17","E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\StaffProfile.js":"18","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\ReplacementReqList.js":"19","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\ChangeDayReqList.js":"20","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Layout\\Navbar.js":"21","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\LinkingReqList.js":"22","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\ResetPassModal.js":"23","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\LeaveReqList.js":"24","E:\\semester 7\\ACLfrontend\\acl\\src\\globalState\\reducers\\index.js":"25","E:\\semester 7\\ACLfrontend\\acl\\src\\keys_dev.js":"26","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\AddStaffModal.js":"27","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\ProfileCard.js":"28","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Layout\\NoResults.js":"29","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\ManualSigninoutModal.js":"30","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\OlderSalariesModal.js":"31","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Layout\\Alert.js":"32","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Notifications\\Notification.js":"33","E:\\semester 7\\ACLfrontend\\acl\\src\\globalState\\actions\\AuthActions.js":"34","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\CourseCard.js":"35","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\UpdateStaff.js":"36","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\UpdateInstructor.js":"37","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AssignInstructor.js":"38","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AssignCC.js":"39","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\EditCourse.js":"40","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AssignStaff.js":"41","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AddCourse.js":"42","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Faculties\\AddFaculty.js":"43","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Faculties\\Faculty.js":"44","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\StaffCard.js":"45","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\AssignStaff.js":"46","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\AddLocation.js":"47","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\TeachingAssignments.js":"48","E:\\semester 7\\ACLfrontend\\acl\\src\\Constants\\StatusCodes.js":"49","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\Location.js":"50","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\ClickableSlotList.js":"51","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\SendLinkingReq.js":"52","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\RequestCard.js":"53","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\SendChangeDayReq.js":"54","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\RequestCard.js":"55","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\SendReplacementReq.js":"56","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\RequestCard.js":"57","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\CompensationRequestCard.js":"58","E:\\semester 7\\ACLfrontend\\acl\\src\\globalState\\reducers\\SigninReducer.js":"59","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\CompensationSendLeaveReq.js":"60","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AnnualSendLeaveReq.js":"61","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\SickSendLeaveReq.js":"62","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\MaternitySendLeaveReq.js":"63","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AccidentalSendLeaveReq.js":"64","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\DeleteProfileModal.js":"65","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\ClickableSlot.js":"66","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\DeleteLocation.js":"67","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\TeachingAssignmentRow.js":"68","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\DeleteStaff.js":"69","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Faculties\\DeleteFaculty.js":"70","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\DeleteInstructor.js":"71","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\RejectRequestModal.js":"72","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\AcceptRequestModal.js":"73","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\CancelRequestModal.js":"74","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\DeleteCourse.js":"75","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Notifications\\DeleteNotification.js":"76","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AccidentalRequestCard.js":"77","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\MaternityRequestCard.js":"78","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\SickRequestCard.js":"79","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AnnualRequestCard.js":"80","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Department\\Department.js":"81","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Department\\AddDepartment.js":"82","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Attendance\\ListView.js":"83","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Schedule\\ScheduleItem.js":"84","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\AcceptRequestModal.js":"85","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\CancelRequestModal.js":"86","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\RejectRequestModal.js":"87","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\CancelRequestModal.js":"88","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\AcceptRequestModal.js":"89","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\RejectRequestModal.js":"90","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\CancelRequestModal.js":"91","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AcceptRequestModal.js":"92","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\RejectRequestModal.js":"93","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Attendance\\ListViewRow.js":"94","E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Department\\DeleteDepartment.js":"95","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\index.js":"96","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\App.js":"97","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\configStore.js":"98","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\serviceWorker.js":"99","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\LogIn.js":"100","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Notification.js":"101","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Welcome.js":"102","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\CourseDetails.js":"103","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Courses.js":"104","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Location.js":"105","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Faculty.js":"106","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\MyProfile.js":"107","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Attendance.js":"108","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\StaffProfile.js":"109","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\ProfilesList.js":"110","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Department.js":"111","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Slots.js":"112","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Schedule.js":"113","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Layout\\Navbar.js":"114","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\ReplacementReqList.js":"115","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\ResetPassModal.js":"116","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\ChangeDayReqList.js":"117","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\LinkingReqList.js":"118","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\LeaveReqList.js":"119","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\globalState\\reducers\\index.js":"120","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\keys_dev.js":"121","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Layout\\NoResults.js":"122","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\RequestCard.js":"123","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Layout\\Alert.js":"124","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\ProfileCard.js":"125","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\AddStaffModal.js":"126","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\OlderSalariesModal.js":"127","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\ManualSigninoutModal.js":"128","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\globalState\\actions\\AuthActions.js":"129","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\EditCourse.js":"130","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Notifications\\Notification.js":"131","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AssignCC.js":"132","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AssignInstructor.js":"133","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\StaffCard.js":"134","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\UpdateInstructor.js":"135","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AssignStaff.js":"136","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\UpdateStaff.js":"137","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\CourseCard.js":"138","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AddCourse.js":"139","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Constants\\StatusCodes.js":"140","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\TeachingAssignments.js":"141","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Schedule\\ScheduleItem.js":"142","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Department\\AddDepartment.js":"143","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\ClickableSlotList.js":"144","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Department\\Department.js":"145","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AnnualSendLeaveReq.js":"146","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\CompensationSendLeaveReq.js":"147","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\globalState\\reducers\\SigninReducer.js":"148","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\MaternitySendLeaveReq.js":"149","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\SickSendLeaveReq.js":"150","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AccidentalSendLeaveReq.js":"151","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\CompensationRequestCard.js":"152","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\SickRequestCard.js":"153","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AccidentalRequestCard.js":"154","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AnnualRequestCard.js":"155","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\MaternityRequestCard.js":"156","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\SendLinkingReq.js":"157","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\RequestCard.js":"158","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\SendChangeDayReq.js":"159","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\RequestCard.js":"160","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\SendReplacementReq.js":"161","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\RejectRequestModal.js":"162","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\DeleteProfileModal.js":"163","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\ClickableSlot.js":"164","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Department\\DeleteDepartment.js":"165","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\TeachingAssignmentRow.js":"166","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\DeleteCourse.js":"167","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\RejectRequestModal.js":"168","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AcceptRequestModal.js":"169","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\CancelRequestModal.js":"170","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\DeleteStaff.js":"171","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\DeleteInstructor.js":"172","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Notifications\\DeleteNotification.js":"173","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\AcceptRequestModal.js":"174","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\CancelRequestModal.js":"175","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\RejectRequestModal.js":"176","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\AcceptRequestModal.js":"177","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\CancelRequestModal.js":"178","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\RejectRequestModal.js":"179","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\AcceptRequestModal.js":"180","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\CancelRequestModal.js":"181","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Attendance\\ListView.js":"182","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Faculties\\AddFaculty.js":"183","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Faculties\\Faculty.js":"184","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\AddLocation.js":"185","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\AssignStaff.js":"186","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Faculties\\DeleteFaculty.js":"187","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Attendance\\ListViewRow.js":"188","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\Location.js":"189","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\DeleteLocation.js":"190"},{"size":925,"mtime":1609153168708,"results":"191","hashOfConfig":"192"},{"size":7203,"mtime":1610550478441,"results":"193","hashOfConfig":"192"},{"size":709,"mtime":1609154108079,"results":"194","hashOfConfig":"192"},{"size":5227,"mtime":1609153240292,"results":"195","hashOfConfig":"192"},{"size":2368,"mtime":1610636838095,"results":"196","hashOfConfig":"192"},{"size":3512,"mtime":1610636816619,"results":"197","hashOfConfig":"192"},{"size":652,"mtime":1610457471652,"results":"198","hashOfConfig":"192"},{"size":8368,"mtime":1610636845312,"results":"199","hashOfConfig":"192"},{"size":3404,"mtime":1610636800205,"results":"200","hashOfConfig":"192"},{"size":3373,"mtime":1610636809237,"results":"201","hashOfConfig":"192"},{"size":15905,"mtime":1610636830353,"results":"202","hashOfConfig":"192"},{"size":11503,"mtime":1610636849611,"results":"203","hashOfConfig":"192"},{"size":8032,"mtime":1610636796040,"results":"204","hashOfConfig":"192"},{"size":3335,"mtime":1610636805183,"results":"205","hashOfConfig":"192"},{"size":42992,"mtime":1610640082606,"results":"206","hashOfConfig":"192"},{"size":4174,"mtime":1610507084288,"results":"207","hashOfConfig":"192"},{"size":9917,"mtime":1610568855259,"results":"208","hashOfConfig":"192"},{"size":13797,"mtime":1610568855261,"results":"209","hashOfConfig":"192"},{"size":3920,"mtime":1610636725989,"results":"210","hashOfConfig":"192"},{"size":3664,"mtime":1610636242617,"results":"211","hashOfConfig":"192"},{"size":10102,"mtime":1610636555689,"results":"212","hashOfConfig":"192"},{"size":5556,"mtime":1610636640875,"results":"213","hashOfConfig":"192"},{"size":4791,"mtime":1610549612088,"results":"214","hashOfConfig":"192"},{"size":16840,"mtime":1610643178206,"results":"215","hashOfConfig":"192"},{"size":456,"mtime":1610643178208,"results":"216","hashOfConfig":"192"},{"size":64,"mtime":1609154195462,"results":"217","hashOfConfig":"192"},{"size":21275,"mtime":1610636708442,"results":"218","hashOfConfig":"192"},{"size":3190,"mtime":1610568855259,"results":"219","hashOfConfig":"192"},{"size":430,"mtime":1609798597132,"results":"220","hashOfConfig":"192"},{"size":11081,"mtime":1610636714600,"results":"221","hashOfConfig":"192"},{"size":5321,"mtime":1609970833684,"results":"222","hashOfConfig":"192"},{"size":686,"mtime":1610457471487,"results":"223","hashOfConfig":"192"},{"size":4239,"mtime":1610636691478,"results":"224","hashOfConfig":"192"},{"size":3238,"mtime":1610636755396,"results":"225","hashOfConfig":"192"},{"size":2914,"mtime":1610458762473,"results":"226","hashOfConfig":"192"},{"size":6496,"mtime":1610636298976,"results":"227","hashOfConfig":"192"},{"size":6537,"mtime":1610636294796,"results":"228","hashOfConfig":"192"},{"size":5144,"mtime":1610636262611,"results":"229","hashOfConfig":"192"},{"size":6044,"mtime":1610636258131,"results":"230","hashOfConfig":"192"},{"size":9440,"mtime":1610636289768,"results":"231","hashOfConfig":"192"},{"size":5256,"mtime":1610637471939,"results":"232","hashOfConfig":"192"},{"size":7924,"mtime":1610554247185,"results":"233","hashOfConfig":"192"},{"size":7741,"mtime":1610636541586,"results":"234","hashOfConfig":"192"},{"size":3008,"mtime":1610459901539,"results":"235","hashOfConfig":"192"},{"size":3567,"mtime":1610568855258,"results":"236","hashOfConfig":"192"},{"size":6346,"mtime":1610636655894,"results":"237","hashOfConfig":"192"},{"size":7836,"mtime":1610636648847,"results":"238","hashOfConfig":"192"},{"size":1158,"mtime":1610507084285,"results":"239","hashOfConfig":"192"},{"size":1388,"mtime":1610463895333,"results":"240","hashOfConfig":"192"},{"size":2792,"mtime":1610636663686,"results":"241","hashOfConfig":"192"},{"size":1400,"mtime":1610463895332,"results":"242","hashOfConfig":"192"},{"size":4897,"mtime":1610457378000,"results":"243","hashOfConfig":"192"},{"size":5290,"mtime":1609861467371,"results":"244","hashOfConfig":"192"},{"size":4991,"mtime":1609861467366,"results":"245","hashOfConfig":"192"},{"size":5163,"mtime":1609861467365,"results":"246","hashOfConfig":"192"},{"size":7960,"mtime":1610636734583,"results":"247","hashOfConfig":"192"},{"size":6526,"mtime":1610636970560,"results":"248","hashOfConfig":"192"},{"size":9202,"mtime":1610454856379,"results":"249","hashOfConfig":"192"},{"size":1858,"mtime":1610643178208,"results":"250","hashOfConfig":"192"},{"size":10398,"mtime":1610643995643,"results":"251","hashOfConfig":"192"},{"size":10380,"mtime":1610643178205,"results":"252","hashOfConfig":"192"},{"size":8720,"mtime":1610643178207,"results":"253","hashOfConfig":"192"},{"size":7208,"mtime":1610643178206,"results":"254","hashOfConfig":"192"},{"size":7769,"mtime":1610643178204,"results":"255","hashOfConfig":"192"},{"size":1659,"mtime":1609970833680,"results":"256","hashOfConfig":"192"},{"size":1898,"mtime":1610534075711,"results":"257","hashOfConfig":"192"},{"size":1825,"mtime":1610636660271,"results":"258","hashOfConfig":"192"},{"size":2729,"mtime":1610636744215,"results":"259","hashOfConfig":"192"},{"size":2082,"mtime":1610636280409,"results":"260","hashOfConfig":"192"},{"size":1813,"mtime":1610636546701,"results":"261","hashOfConfig":"192"},{"size":2115,"mtime":1610636275842,"results":"262","hashOfConfig":"192"},{"size":3382,"mtime":1609861467371,"results":"263","hashOfConfig":"192"},{"size":2028,"mtime":1609861467370,"results":"264","hashOfConfig":"192"},{"size":2015,"mtime":1609861467370,"results":"265","hashOfConfig":"192"},{"size":2037,"mtime":1610636272265,"results":"266","hashOfConfig":"192"},{"size":1845,"mtime":1610636671744,"results":"267","hashOfConfig":"192"},{"size":7286,"mtime":1609861467367,"results":"268","hashOfConfig":"192"},{"size":7762,"mtime":1609862750516,"results":"269","hashOfConfig":"192"},{"size":8087,"mtime":1609862773063,"results":"270","hashOfConfig":"192"},{"size":9202,"mtime":1610454856378,"results":"271","hashOfConfig":"192"},{"size":2865,"mtime":1610636534643,"results":"272","hashOfConfig":"192"},{"size":10735,"mtime":1610636316862,"results":"273","hashOfConfig":"192"},{"size":1087,"mtime":1610463895329,"results":"274","hashOfConfig":"192"},{"size":1268,"mtime":1610463895330,"results":"275","hashOfConfig":"192"},{"size":2052,"mtime":1610644695076,"results":"276","hashOfConfig":"192"},{"size":2015,"mtime":1609861467363,"results":"277","hashOfConfig":"192"},{"size":3378,"mtime":1609861467363,"results":"278","hashOfConfig":"192"},{"size":2029,"mtime":1609861467374,"results":"279","hashOfConfig":"192"},{"size":2035,"mtime":1609861467373,"results":"280","hashOfConfig":"192"},{"size":2037,"mtime":1609861467374,"results":"281","hashOfConfig":"192"},{"size":2017,"mtime":1609861467367,"results":"282","hashOfConfig":"192"},{"size":2023,"mtime":1609861467366,"results":"283","hashOfConfig":"192"},{"size":3372,"mtime":1609861467369,"results":"284","hashOfConfig":"192"},{"size":1007,"mtime":1610636229428,"results":"285","hashOfConfig":"192"},{"size":1825,"mtime":1610636529924,"results":"286","hashOfConfig":"192"},{"size":925,"mtime":1609153168708,"results":"287","hashOfConfig":"288"},{"size":7203,"mtime":1610550478441,"results":"289","hashOfConfig":"288"},{"size":709,"mtime":1609154108079,"results":"290","hashOfConfig":"288"},{"size":5227,"mtime":1609153240292,"results":"291","hashOfConfig":"288"},{"size":3512,"mtime":1610636816619,"results":"292","hashOfConfig":"288"},{"size":2351,"mtime":1610648720491,"results":"293","hashOfConfig":"288"},{"size":652,"mtime":1610457471652,"results":"294","hashOfConfig":"288"},{"size":9917,"mtime":1610568855259,"results":"295","hashOfConfig":"288"},{"size":3404,"mtime":1610636800205,"results":"296","hashOfConfig":"288"},{"size":4174,"mtime":1610507084288,"results":"297","hashOfConfig":"288"},{"size":3373,"mtime":1610636809237,"results":"298","hashOfConfig":"288"},{"size":15905,"mtime":1610636830353,"results":"299","hashOfConfig":"288"},{"size":8032,"mtime":1610636796040,"results":"300","hashOfConfig":"288"},{"size":13797,"mtime":1610648821861,"results":"301","hashOfConfig":"288"},{"size":8368,"mtime":1610636845312,"results":"302","hashOfConfig":"288"},{"size":3335,"mtime":1610636805183,"results":"303","hashOfConfig":"288"},{"size":42992,"mtime":1610640082606,"results":"304","hashOfConfig":"288"},{"size":11503,"mtime":1610636849611,"results":"305","hashOfConfig":"288"},{"size":10102,"mtime":1610636555689,"results":"306","hashOfConfig":"288"},{"size":3920,"mtime":1610636725989,"results":"307","hashOfConfig":"288"},{"size":4791,"mtime":1610549612088,"results":"308","hashOfConfig":"288"},{"size":3664,"mtime":1610652578319,"results":"309","hashOfConfig":"288"},{"size":5556,"mtime":1610652268488,"results":"310","hashOfConfig":"288"},{"size":16840,"mtime":1610652563050,"results":"311","hashOfConfig":"288"},{"size":456,"mtime":1610643178208,"results":"312","hashOfConfig":"288"},{"size":64,"mtime":1609154195462,"results":"313","hashOfConfig":"288"},{"size":430,"mtime":1609798597132,"results":"314","hashOfConfig":"288"},{"size":6526,"mtime":1610636970560,"results":"315","hashOfConfig":"288"},{"size":686,"mtime":1610457471487,"results":"316","hashOfConfig":"288"},{"size":3190,"mtime":1610568855259,"results":"317","hashOfConfig":"288"},{"size":21275,"mtime":1610636708442,"results":"318","hashOfConfig":"288"},{"size":5321,"mtime":1609970833684,"results":"319","hashOfConfig":"288"},{"size":11081,"mtime":1610636714600,"results":"320","hashOfConfig":"288"},{"size":3238,"mtime":1610636755396,"results":"321","hashOfConfig":"288"},{"size":9440,"mtime":1610636289768,"results":"322","hashOfConfig":"288"},{"size":4239,"mtime":1610636691478,"results":"323","hashOfConfig":"288"},{"size":6044,"mtime":1610636258131,"results":"324","hashOfConfig":"288"},{"size":5144,"mtime":1610636262611,"results":"325","hashOfConfig":"288"},{"size":3567,"mtime":1610568855258,"results":"326","hashOfConfig":"288"},{"size":6537,"mtime":1610636294796,"results":"327","hashOfConfig":"288"},{"size":5256,"mtime":1610637471939,"results":"328","hashOfConfig":"288"},{"size":6496,"mtime":1610636298976,"results":"329","hashOfConfig":"288"},{"size":2914,"mtime":1610458762473,"results":"330","hashOfConfig":"288"},{"size":7924,"mtime":1610554247185,"results":"331","hashOfConfig":"288"},{"size":1388,"mtime":1610463895333,"results":"332","hashOfConfig":"288"},{"size":1158,"mtime":1610507084285,"results":"333","hashOfConfig":"288"},{"size":1268,"mtime":1610463895330,"results":"334","hashOfConfig":"288"},{"size":10735,"mtime":1610636316862,"results":"335","hashOfConfig":"288"},{"size":1400,"mtime":1610463895332,"results":"336","hashOfConfig":"288"},{"size":2865,"mtime":1610636534643,"results":"337","hashOfConfig":"288"},{"size":10380,"mtime":1610643178205,"results":"338","hashOfConfig":"288"},{"size":10398,"mtime":1610643995643,"results":"339","hashOfConfig":"288"},{"size":1858,"mtime":1610643178208,"results":"340","hashOfConfig":"288"},{"size":7208,"mtime":1610643178206,"results":"341","hashOfConfig":"288"},{"size":8720,"mtime":1610643178207,"results":"342","hashOfConfig":"288"},{"size":7769,"mtime":1610643178204,"results":"343","hashOfConfig":"288"},{"size":9202,"mtime":1610454856379,"results":"344","hashOfConfig":"288"},{"size":8087,"mtime":1609862773063,"results":"345","hashOfConfig":"288"},{"size":7286,"mtime":1609861467367,"results":"346","hashOfConfig":"288"},{"size":9202,"mtime":1610454856378,"results":"347","hashOfConfig":"288"},{"size":7762,"mtime":1609862750516,"results":"348","hashOfConfig":"288"},{"size":4897,"mtime":1610457378000,"results":"349","hashOfConfig":"288"},{"size":5290,"mtime":1609861467371,"results":"350","hashOfConfig":"288"},{"size":4991,"mtime":1609861467366,"results":"351","hashOfConfig":"288"},{"size":5163,"mtime":1609861467365,"results":"352","hashOfConfig":"288"},{"size":7960,"mtime":1610636734583,"results":"353","hashOfConfig":"288"},{"size":2037,"mtime":1609861467374,"results":"354","hashOfConfig":"288"},{"size":1659,"mtime":1609970833680,"results":"355","hashOfConfig":"288"},{"size":1898,"mtime":1610534075711,"results":"356","hashOfConfig":"288"},{"size":1825,"mtime":1610636529924,"results":"357","hashOfConfig":"288"},{"size":2729,"mtime":1610636744215,"results":"358","hashOfConfig":"288"},{"size":2037,"mtime":1610636272265,"results":"359","hashOfConfig":"288"},{"size":3372,"mtime":1609861467369,"results":"360","hashOfConfig":"288"},{"size":2023,"mtime":1609861467366,"results":"361","hashOfConfig":"288"},{"size":2017,"mtime":1609861467367,"results":"362","hashOfConfig":"288"},{"size":2082,"mtime":1610636280409,"results":"363","hashOfConfig":"288"},{"size":2115,"mtime":1610636275842,"results":"364","hashOfConfig":"288"},{"size":1845,"mtime":1610636671744,"results":"365","hashOfConfig":"288"},{"size":2035,"mtime":1609861467373,"results":"366","hashOfConfig":"288"},{"size":2029,"mtime":1609861467374,"results":"367","hashOfConfig":"288"},{"size":3382,"mtime":1609861467371,"results":"368","hashOfConfig":"288"},{"size":2028,"mtime":1609861467370,"results":"369","hashOfConfig":"288"},{"size":2015,"mtime":1609861467370,"results":"370","hashOfConfig":"288"},{"size":3378,"mtime":1609861467363,"results":"371","hashOfConfig":"288"},{"size":2052,"mtime":1610644695076,"results":"372","hashOfConfig":"288"},{"size":2015,"mtime":1609861467363,"results":"373","hashOfConfig":"288"},{"size":1087,"mtime":1610463895329,"results":"374","hashOfConfig":"288"},{"size":7741,"mtime":1610636541586,"results":"375","hashOfConfig":"288"},{"size":3008,"mtime":1610459901539,"results":"376","hashOfConfig":"288"},{"size":7836,"mtime":1610636648847,"results":"377","hashOfConfig":"288"},{"size":6346,"mtime":1610636655894,"results":"378","hashOfConfig":"288"},{"size":1813,"mtime":1610636546701,"results":"379","hashOfConfig":"288"},{"size":1007,"mtime":1610636229428,"results":"380","hashOfConfig":"288"},{"size":2792,"mtime":1610636663686,"results":"381","hashOfConfig":"288"},{"size":1825,"mtime":1610636660271,"results":"382","hashOfConfig":"288"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vyfzpw",{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"475","messages":"476","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},"zh6x1l",{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"575"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"575"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"575"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"575"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"575"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"761","usedDeprecatedRules":"575"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"575"},"E:\\semester 7\\ACLfrontend\\acl\\src\\index.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\App.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\configStore.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\serviceWorker.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Notification.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\LogIn.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Welcome.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\ProfilesList.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Courses.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Faculty.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\MyProfile.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Schedule.js",["770"],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Attendance.js",["771","772"],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Department.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Slots.js",["773"],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\Location.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\CourseDetails.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Pages\\StaffProfile.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\ReplacementReqList.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\ChangeDayReqList.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Layout\\Navbar.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\LinkingReqList.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\ResetPassModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\LeaveReqList.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\globalState\\reducers\\index.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\keys_dev.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\AddStaffModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\ProfileCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Layout\\NoResults.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\ManualSigninoutModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\OlderSalariesModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Layout\\Alert.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Notifications\\Notification.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\globalState\\actions\\AuthActions.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\CourseCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\UpdateStaff.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\UpdateInstructor.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AssignInstructor.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AssignCC.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\EditCourse.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AssignStaff.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\AddCourse.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Faculties\\AddFaculty.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Faculties\\Faculty.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\StaffCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\AssignStaff.js",["774","775"],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\AddLocation.js",["776"],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\TeachingAssignments.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Constants\\StatusCodes.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\Location.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\ClickableSlotList.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\SendLinkingReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\RequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\SendChangeDayReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\RequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\SendReplacementReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\RequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\CompensationRequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\globalState\\reducers\\SigninReducer.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\CompensationSendLeaveReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AnnualSendLeaveReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\SickSendLeaveReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\MaternitySendLeaveReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AccidentalSendLeaveReq.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Profiles\\DeleteProfileModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\ClickableSlot.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Location\\DeleteLocation.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Slots\\TeachingAssignmentRow.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\DeleteStaff.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Faculties\\DeleteFaculty.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\DeleteInstructor.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\RejectRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\AcceptRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Linking\\CancelRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Courses\\DeleteCourse.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Notifications\\DeleteNotification.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AccidentalRequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\MaternityRequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\SickRequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AnnualRequestCard.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Department\\Department.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Department\\AddDepartment.js",["777"],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Attendance\\ListView.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Schedule\\ScheduleItem.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\AcceptRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\CancelRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\ChangeDay\\RejectRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\CancelRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\AcceptRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Replacement\\RejectRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\CancelRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\AcceptRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Leave\\RejectRequestModal.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Attendance\\ListViewRow.js",[],"E:\\semester 7\\ACLfrontend\\acl\\src\\Components\\Department\\DeleteDepartment.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\index.js",[],["778","779"],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\App.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\configStore.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\serviceWorker.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\LogIn.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Notification.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Welcome.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\CourseDetails.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Courses.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Location.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Faculty.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\MyProfile.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Attendance.js",["780","781"],"import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { staffType } from '../Constants/StatusCodes'\r\nimport { backendLink } from '../keys_dev'\r\nimport { Button, Row, Col, Form } from 'react-bootstrap'\r\nimport '../Stylesheets/Attendance.css'\r\nimport ListView from '../Components/Attendance/ListView'\r\n\r\nconst axios = require('axios')\r\nconst Attendance = (props) => {\r\n  const errorStyle = {\r\n    fontSize: '12px',\r\n    fontWeight: '600',\r\n    color: '#8a0303',\r\n  }\r\n  const type = useSelector((state) => state.type)\r\n  const hr = type === staffType.HR\r\n  const [myAttendance, setMyAttendance] = useState(true)\r\n  const [attendanceRecords, setAttendanceRecords] = useState([])\r\n  const [filteredAttendance, setFilteredAttendance] = useState([])\r\n  const [filteredAll, setFilteredAll] = useState([])\r\n  const token = useSelector((state) => state.token)\r\n  const [pageError, setPageError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [filtering, setFiltering] = useState(false)\r\n  const [monthStr, setMonthStr] = useState('')\r\n\r\n  const [manualSignOutId, setManualSignOutId] = useState('')\r\n  const [allAttendanceRecords, setAllAttendanceRecords] = useState([])\r\n\r\n  const fetchAttendanceNamesAndIds = async () => {\r\n    try {\r\n      var allAttendanceRecs = hr\r\n        ? await axios({\r\n            url: `${backendLink}/attendence/viewAllAttendance`,\r\n            method: 'GET',\r\n            headers: { Authorization: token },\r\n          })\r\n        : null\r\n      var attendanceRecs = await axios({\r\n        url: `${backendLink}/attendence/viewAttendance`,\r\n        method: 'GET',\r\n        headers: { Authorization: token },\r\n      })\r\n      const namesAndIds = await axios.get(\r\n        backendLink + '/attendence/getNamesAndIds',\r\n        {\r\n          headers: { Authorization: token },\r\n        }\r\n      )\r\n      if (namesAndIds.data.statusCode === '000') {\r\n      }\r\n      // setProfiles(namesAndIds.data.profiles)\r\n      else {\r\n        setPageError(namesAndIds.data.error)\r\n      }\r\n\r\n      if (attendanceRecs.data.statusCode === '000') {\r\n        setAttendanceRecords(attendanceRecs.data.returnData)\r\n\r\n        if (hr) {\r\n          if (allAttendanceRecs.data.statusCode === '000') {\r\n            let allAttendanceTemp = allAttendanceRecs.data.returnData\r\n            const attendanceWithNames = []\r\n            let attendanceWithName = {}\r\n            let name\r\n            let namesAndIdsTemp = namesAndIds.data.profiles\r\n            for (let i = 0; i < allAttendanceTemp.length; i++) {\r\n              attendanceWithName.signIn = allAttendanceTemp[i].signIn\r\n              attendanceWithName.signOut = allAttendanceTemp[i].signOut\r\n              name = namesAndIdsTemp.filter((profile) => {\r\n                return allAttendanceTemp[i].staffId === profile._id\r\n              })\r\n\r\n              name = name.length > 0 ? name[0] : ''\r\n\r\n              attendanceWithName.staffName = name.name\r\n\r\n              attendanceWithName.staffId = allAttendanceTemp[i].staffId\r\n              attendanceWithName.attendanceId = allAttendanceTemp[i]._id\r\n              attendanceWithNames.push(attendanceWithName)\r\n              attendanceWithName = {}\r\n            }\r\n            setAllAttendanceRecords(attendanceWithNames)\r\n          } else {\r\n            setPageError(allAttendanceRecs.data.error)\r\n          }\r\n        }\r\n      } else {\r\n        setPageError(attendanceRecs.data.error)\r\n      }\r\n    } catch (err) {\r\n      setPageError(err.message)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    fetchAttendanceNamesAndIds()\r\n  }, [])\r\n\r\n  const months = [\r\n    { str: '', month: '' },\r\n    { str: '01', month: 'January' },\r\n    { str: '02', month: 'February' },\r\n    { str: '03', month: 'March' },\r\n    { str: '04', month: 'April' },\r\n    { str: '05', month: 'May' },\r\n    { str: '06', month: 'June' },\r\n    { str: '07', month: 'July' },\r\n    { str: '08', month: 'August' },\r\n    { str: '09', month: 'September' },\r\n    { str: '10', month: 'October' },\r\n    { str: '11', month: 'November' },\r\n    { str: '12', month: 'December' },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (filtering) {\r\n      const filteredTemp = attendanceRecords.filter(\r\n        (rec) => rec.signIn.substring(5, 7) === monthStr\r\n      )\r\n      setFilteredAttendance(filteredTemp)\r\n      const filteredAllTemp = allAttendanceRecords.filter(\r\n        (rec) => rec.signIn.substring(5, 7) === monthStr\r\n      )\r\n      setFilteredAll(filteredAllTemp)\r\n    }\r\n  }, [monthStr])\r\n\r\n  return (\r\n    <div className='attendanceContainer'>\r\n      <p\r\n        style={{\r\n          marginLeft: '5vw',\r\n          marginTop: '30px',\r\n          fontSize: '40px',\r\n          color: '#009999',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        Attendance\r\n      </p>\r\n\r\n      {hr ? (\r\n        <Row>\r\n          <Col md={4}></Col>\r\n          <Col md={3}>\r\n            <div>\r\n              <Button\r\n                style={{ width: '60%', float: 'right' }}\r\n                variant='info'\r\n                onClick={() => {\r\n                  setMyAttendance(true)\r\n                }}\r\n              >\r\n                My Attendance\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col md={3}>\r\n            <div style={{}}>\r\n              <Button\r\n                style={{ width: '60%' }}\r\n                variant='info'\r\n                onClick={() => {\r\n                  setMyAttendance(false)\r\n                }}\r\n              >\r\n                All Attendance\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n      <Row style={{ marginTop: '20px', marginBottom: '20px' }}>\r\n        <Col sm={1}></Col>\r\n        <Col sm={2}>\r\n          <p\r\n            style={{\r\n              fontSize: '15px',\r\n              fontWeight: '600',\r\n            }}\r\n          >\r\n            Filter by Month\r\n          </p>\r\n        </Col>\r\n        <Col>\r\n          <Form.Control\r\n            as='select'\r\n            style={{ width: '20%' }}\r\n            defaultValue=''\r\n            value={monthStr}\r\n            onChange={(e) => {\r\n              if (e.target.value === '') {\r\n                setFiltering(false)\r\n              } else {\r\n                setFiltering(true)\r\n              }\r\n              setMonthStr(e.target.value)\r\n            }}\r\n          >\r\n            <option value=''>No Filters</option>\r\n            {months.map((mon) => {\r\n              return <option value={mon.str}>{mon.month}</option>\r\n            })}\r\n          </Form.Control>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <p\r\n          style={{\r\n            fontSize: '20px',\r\n            color: '#858585',\r\n            fontWeight: '600',\r\n            marginTop: '20%',\r\n            marginLeft: '20%',\r\n          }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : (\r\n        <div>\r\n          <Row style={{ marginTop: '40px' }}>\r\n            <Col md={1}></Col>\r\n            <Col md={8}>\r\n              <ListView\r\n                hr={hr}\r\n                all={!myAttendance}\r\n                records={\r\n                  !filtering\r\n                    ? myAttendance\r\n                      ? attendanceRecords\r\n                      : allAttendanceRecords\r\n                    : myAttendance\r\n                    ? filteredAttendance\r\n                    : filteredAll\r\n                }\r\n                signOutId={manualSignOutId}\r\n                setSignOutId={(info) => {\r\n                  setManualSignOutId(info)\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col style={{ marginLeft: '2vw' }}>\r\n              <Row style={{ marginTop: '4vw', marginBottom: '50px' }}></Row>\r\n              <Row></Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{pageError}</p>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Attendance\r\n","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\StaffProfile.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\ProfilesList.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Department.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Slots.js",["782"],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Dropdown, Modal, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport Alert from '../Components/Layout/Alert'\r\nimport ClickableSlotList from '../Components/Slots/ClickableSlotList'\r\nimport TeachingAssignments from '../Components/Slots/TeachingAssignments'\r\nimport { staffType } from '../Constants/StatusCodes'\r\n\r\nimport { backendLink } from '../keys_dev'\r\n//make sure only the people that can do something are able to do it:\r\n\r\n//scrolling in listviews\r\n\r\nconst Slots = (props) => {\r\n  const errorStyle = {\r\n    fontSize: '12px',\r\n    fontWeight: '600',\r\n    color: '#8a0303',\r\n  }\r\n  const myDepartment = useSelector((state) => state.department)\r\n  const myType = useSelector((state) => state.type)\r\n  const token = useSelector((state) => state.token)\r\n  const myId = useSelector((state) => state.id)\r\n\r\n  const [showSlotsModal, setShowSlotsModal] = useState(false)\r\n  const [showAssignModal, setShowAssignModal] = useState(false)\r\n  const [deleteAssignModal, setDeleteAssignModal] = useState(false)\r\n  const [deleteSlotModal, setDeleteSlotModal] = useState(false)\r\n  const [editAssignModal, setEditAssignModal] = useState(false)\r\n  const [addSlotModal, setAddSlotModal] = useState(false)\r\n  const [updateSlotModal, setUpdateSlotModal] = useState(false)\r\n  const [updateStaffSlotId, setUpdateStaffSlotId] = useState('')\r\n\r\n  const [updateSlotModalInfo, setUpdateSlotModalInfo] = useState({\r\n    day: 'saturday',\r\n    time: 1,\r\n    location: '',\r\n    courseName: '',\r\n    type: 'lab',\r\n    courseId: '',\r\n    locationId: '',\r\n    slotId: '',\r\n  })\r\n  const [pageLoading, setPageLoading] = useState(false)\r\n  const [allSlotsLoading, setAllSlotsLoading] = useState(false)\r\n  const [slotsLoading, setSlotsLoading] = useState(false)\r\n  const [tALoading, setTALoading] = useState(false)\r\n  const [locationsLoading, setLocationsLoading] = useState(false)\r\n  const [staffInDepartmentLoading, setStaffInDepartmentLoading] = useState(\r\n    false\r\n  )\r\n  const [coursesInDepartmentLoading, setCoursesInDepartmentLoading] = useState(\r\n    false\r\n  )\r\n  const [alert, setAlert] = useState(false)\r\n  const [alertMsg, setAlertMsg] = useState('')\r\n  const [notAuthorized, setNotAuthorized] = useState(false)\r\n  const [pageError, setPageError] = useState('')\r\n  const [slotError, setSlotError] = useState('')\r\n  const [assignError, setAssignError] = useState('')\r\n  const [deleteAssignError, setDeleteAssignError] = useState('')\r\n  const [editAssignError, setEditAssignError] = useState('')\r\n  const [addSlotError, setAddSlotError] = useState('')\r\n  const [updateSlotError, setUpdateSlotError] = useState('')\r\n  const [deleteSlotError, setDeleteSlotError] = useState('')\r\n  const [addSlotModalInfo, setAddSlotModalInfo] = useState({\r\n    day: 'saturday',\r\n    time: 1,\r\n    location: '',\r\n    staffName: '',\r\n    courseName: '',\r\n    type: 'lab',\r\n    staffId: '',\r\n    courseId: '',\r\n    locationId: '',\r\n  })\r\n  const [deleteSlotModalInfo, setDeleteSlotModalInfo] = useState('')\r\n  const [deleteSlotModalCourse, setDeleteSlotModalCoure] = useState('')\r\n  const [updateStaffModalInfo, setUpdateStaffModalInfo] = useState({\r\n    staffName: '',\r\n    staffId: '',\r\n    slotId: '',\r\n  })\r\n  const [deleteStaffModalInfo, setDeleteStaffModalInfo] = useState('')\r\n  const [staffInDepartment1, setStaffIndepartment] = useState([])\r\n  const [teachingAssignments1, setTeachingAssignments] = useState([])\r\n  const [allSlots1, setAllSlots] = useState([])\r\n  const [availableSlots1, setAvailableSlots] = useState([])\r\n  const [allLocations, setAllLocations] = useState([])\r\n  const [coursesInDepartment, setCoursesInDepartment] = useState([])\r\n  const [assignStaffInfo, setAssignStaffInfo] = useState({\r\n    staffName: '',\r\n    staffId: '',\r\n    slotId: '',\r\n  })\r\n  const [refresh, setRefresh] = useState(0)\r\n  var teachingAssignmentRes = { data: [] }\r\n  var allSlotsRes = { data: [] }\r\n  var staffInDepartment = []\r\n  var availableSlots = []\r\n  const days = [\r\n    'saturday',\r\n    'sunday',\r\n    'monday',\r\n    'tuesday',\r\n    'wednesday',\r\n    'thursday',\r\n  ]\r\n  useEffect(() => {\r\n    setPageError('')\r\n    setSlotError('')\r\n    setAssignError('')\r\n    setAddSlotError('')\r\n    setEditAssignError('')\r\n    setDeleteAssignError('')\r\n    setDeleteSlotError('')\r\n    setUpdateSlotError('')\r\n  }, [\r\n    showSlotsModal,\r\n    showAssignModal,\r\n    editAssignModal,\r\n    deleteAssignModal,\r\n    updateSlotModal,\r\n    addSlotModal,\r\n    deleteSlotModal,\r\n  ])\r\n  const types = ['lab', 'lecture', 'tutorial']\r\n  const times = [1, 2, 3, 4, 5]\r\n  const fetchTeachingAssignments = async () => {\r\n    try {\r\n      myType === 'hod'\r\n        ? (teachingAssignmentRes = await axios({\r\n            method: 'POST',\r\n            url: `${backendLink}/slot/viewTeachingAssignmentHOD`,\r\n            headers: { Authorization: token },\r\n            data: { id: myId },\r\n          }))\r\n        : (teachingAssignmentRes = await axios({\r\n            method: 'POST',\r\n            url: `${backendLink}/slot/viewTeachingAssignmentCI`,\r\n            headers: { Authorization: token },\r\n            data: { id: myId },\r\n          }))\r\n      if (teachingAssignmentRes.data.statusCode === '000')\r\n        setTeachingAssignments(teachingAssignmentRes.data.returnData)\r\n      else {\r\n        setPageLoading(false)\r\n        setPageError(teachingAssignmentRes.data.error)\r\n        if (teachingAssignmentRes.data.statusCode === '001')\r\n          setNotAuthorized(true)\r\n      }\r\n    } catch (err) {\r\n      teachingAssignmentRes = { data: [] }\r\n      setAllSlotsLoading(false)\r\n      setPageError(err.message)\r\n    }\r\n    setTALoading(false)\r\n  }\r\n  const fetchAllSlots = async () => {\r\n    try {\r\n      myType === 'hod'\r\n        ? (allSlotsRes = await axios({\r\n            url: `${backendLink}/slot/viewAllDepartmentSlots`,\r\n            headers: { Authorization: token },\r\n            method: 'POST',\r\n            data: { departmentId: myDepartment },\r\n          }))\r\n        : (allSlotsRes = await axios({\r\n            url: `${backendLink}/slot/viewAllCoursesSlots`,\r\n            headers: { Authorization: token },\r\n            method: 'POST',\r\n            data: { staffId: myId },\r\n          }))\r\n      if (allSlotsRes.data.statusCode === '000')\r\n        setAllSlots(allSlotsRes.data.slots)\r\n      else {\r\n        setSlotError(allSlotsRes.data.error)\r\n        setAllSlotsLoading(false)\r\n      }\r\n    } catch (err) {\r\n      teachingAssignmentRes = { data: [] }\r\n      setAllSlotsLoading(false)\r\n      setPageError(err.message)\r\n    }\r\n    setSlotsLoading(false)\r\n  }\r\n  const fetchLocations = async () => {\r\n    try {\r\n      const locations = await axios({\r\n        method: 'POST',\r\n        url: `${backendLink}/location/viewLocations`,\r\n        headers: { Authorization: token },\r\n      })\r\n\r\n      if (locations.data.statusCode === '000') {\r\n        setAllLocations(locations.data.locations)\r\n        setUpdateSlotModalInfo({\r\n          ...updateSlotModalInfo,\r\n          location: locations.data.locations[0].name,\r\n          locationId: locations.data.locations[0]._id,\r\n        })\r\n        setAddSlotModalInfo({\r\n          ...updateSlotModalInfo,\r\n          location: locations.data.locations[0].name,\r\n          locationId: locations.data.locations[0]._id,\r\n        })\r\n      } else {\r\n        setPageLoading(false)\r\n        setPageError(locations.data.error)\r\n      }\r\n    } catch (err) {\r\n      setPageLoading(false)\r\n      setPageError(err.message)\r\n    }\r\n    setLocationsLoading(false)\r\n  }\r\n  const fetchCoursesInDepartment = async () => {\r\n    try {\r\n      const courses = await axios({\r\n        method: 'POST',\r\n        url: `${backendLink}/course/viewCoursesInDepartment`,\r\n        headers: { Authorization: token },\r\n        data: { departmentId: myDepartment },\r\n      })\r\n\r\n      if (courses.data.statusCode === '000') {\r\n        setCoursesInDepartment(courses.data.courses)\r\n        setAddSlotModalInfo({\r\n          ...addSlotModalInfo,\r\n          courseName: courses.data.courses[0].name,\r\n          courseId: courses.data.courses[0]._id,\r\n        })\r\n        setUpdateSlotModalInfo({\r\n          ...updateSlotModalInfo,\r\n          courseName: courses.data.courses[0].name,\r\n          courseId: courses.data.courses[0]._id,\r\n        })\r\n      } else {\r\n        setPageLoading(false)\r\n        setPageError(courses.data.error)\r\n      }\r\n    } catch (err) {\r\n      setPageLoading(false)\r\n      setPageError(err.message)\r\n    }\r\n    setCoursesInDepartmentLoading(false)\r\n  }\r\n\r\n  const fetchStaffInDepartment = async () => {\r\n    try {\r\n      staffInDepartment = await axios({\r\n        url: `${backendLink}/staff/viewStaffPerDepartment1`,\r\n        headers: { Authorization: token },\r\n        method: 'POST',\r\n        data: { id: myId },\r\n      })\r\n\r\n      if (staffInDepartment.data.statusCode === '000') {\r\n        staffInDepartment = staffInDepartment.data.staff\r\n        setStaffIndepartment(staffInDepartment)\r\n        setAssignStaffInfo({\r\n          ...assignStaffInfo,\r\n          staffName: staffInDepartment[0].name,\r\n          staffId: staffInDepartment[0]._id,\r\n        })\r\n      } else {\r\n        setPageError(staffInDepartment.data.error)\r\n        setPageLoading(false)\r\n      }\r\n    } catch (err) {\r\n      setPageError(err.message)\r\n      setPageLoading(false)\r\n    }\r\n    setStaffInDepartmentLoading(false)\r\n  }\r\n  const fetchAvailableSlots = async () => {\r\n    try {\r\n      availableSlots =\r\n        myType === staffType.HOD\r\n          ? await axios({\r\n              method: 'POST',\r\n              url: `${backendLink}/slot/viewDepartmentSlots`,\r\n              headers: { Authorization: token },\r\n              data: { departmentId: myDepartment },\r\n            })\r\n          : await axios({\r\n              method: 'POST',\r\n              url: `${backendLink}/slot/viewCoursesSlots`,\r\n              headers: { Authorization: token },\r\n              data: { staffId: myId },\r\n            })\r\n\r\n      if (availableSlots.data.statusCode === '000')\r\n        setAvailableSlots(availableSlots.data.slots)\r\n      else {\r\n        setPageLoading(false)\r\n        setAssignError(availableSlots.data.error)\r\n      }\r\n    } catch (err) {\r\n      setPageLoading(false)\r\n      setAssignError(err.message)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    setPageLoading(true)\r\n    setAllSlotsLoading(true)\r\n    setSlotsLoading(true)\r\n    setTALoading(true)\r\n    setLocationsLoading(true)\r\n    setStaffInDepartmentLoading(true)\r\n    setCoursesInDepartmentLoading(true)\r\n    fetchTeachingAssignments()\r\n    fetchAllSlots()\r\n    fetchStaffInDepartment()\r\n    fetchAvailableSlots()\r\n    fetchLocations()\r\n    fetchCoursesInDepartment()\r\n  }, [refresh])\r\n  const titleStyle = { fontSize: '20px', fontWeight: '600' }\r\n  const handleSelectionAddSlot = (selection) => {\r\n    setAssignStaffInfo((previous) => {\r\n      return { ...previous, slotId: selection }\r\n    })\r\n  }\r\n  return (\r\n    <div style={{ height: '100%' }}>\r\n      <p\r\n        style={{\r\n          marginLeft: '5vw',\r\n          marginTop: '30px',\r\n          fontSize: '40px',\r\n          color: '#009999',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        Slot Assignments\r\n      </p>\r\n      <Row>\r\n        <Col md={1}></Col>\r\n        <Col md={10}>\r\n          {pageLoading &&\r\n          (locationsLoading ||\r\n            coursesInDepartmentLoading ||\r\n            staffInDepartmentLoading ||\r\n            // availableSlotsLoading ||\r\n            tALoading) ? (\r\n            <p\r\n              style={{\r\n                fontSize: '20px',\r\n                color: '#858585',\r\n                fontWeight: '600',\r\n                marginTop: '30px',\r\n                marginBottom: '30px',\r\n              }}\r\n            >\r\n              Loading...\r\n            </p>\r\n          ) : (\r\n            <TeachingAssignments\r\n              slots={teachingAssignments1}\r\n              delete={(info) => {\r\n                setDeleteStaffModalInfo(info)\r\n                setDeleteAssignModal(true)\r\n              }}\r\n              edit={(info) => {\r\n                setUpdateStaffSlotId(info.slotId)\r\n                setUpdateStaffModalInfo({\r\n                  staffId: info.staffId,\r\n                  staffName: info.staffName,\r\n                })\r\n                setEditAssignModal(true)\r\n              }}\r\n              // updateInfo={updateStaffModalInfo}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginTop: '30px' }}>\r\n        <Col sm={!notAuthorized ? 7 : 5}></Col>\r\n        <Col>\r\n          <p style={errorStyle}>{pageError}</p>\r\n        </Col>\r\n      </Row>\r\n      <Row style={{ marginBottom: '20px' }}>\r\n        <Col md={4}></Col>\r\n        <Col md={2}>\r\n          <Button\r\n            style={{ width: '70%' }}\r\n            variant='info'\r\n            onClick={() => {\r\n              setShowSlotsModal(true)\r\n            }}\r\n          >\r\n            View All Slots\r\n          </Button>\r\n        </Col>\r\n        {myType !== 'ta' ? (\r\n          <Col md={2}>\r\n            <Button\r\n              style={{ width: '70%' }}\r\n              variant='info'\r\n              onClick={() => {\r\n                setShowAssignModal(true)\r\n              }}\r\n            >\r\n              Assign Staff\r\n            </Button>\r\n          </Col>\r\n        ) : null}\r\n      </Row>\r\n      {/* Slots Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={showSlotsModal}\r\n        onHide={() => {\r\n          setShowSlotsModal(false)\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Slots</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          {myType === 'ta' ? (\r\n            <Button\r\n              variant='info'\r\n              onClick={() => {\r\n                setShowSlotsModal(false)\r\n                setAddSlotModal(true)\r\n              }}\r\n            >\r\n              Add Slot\r\n            </Button>\r\n          ) : null}\r\n\r\n          <Row>\r\n            <Col md={1}></Col>\r\n            <Col md={10}>\r\n              {allSlotsLoading &&\r\n              (locationsLoading ||\r\n                coursesInDepartmentLoading ||\r\n                staffInDepartmentLoading ||\r\n                // availableSlotsLoading ||\r\n                slotsLoading) ? (\r\n                <p\r\n                  style={{\r\n                    fontSize: '20px',\r\n                    color: '#858585',\r\n                    fontWeight: '600',\r\n                    marginTop: '30px',\r\n                    marginBottom: '30px',\r\n                  }}\r\n                >\r\n                  Loading...\r\n                </p>\r\n              ) : (\r\n                <TeachingAssignments\r\n                  delete={(info) => {\r\n                    setDeleteSlotModalInfo(info._id)\r\n                    setDeleteSlotModalCoure(info.courseId)\r\n                    setShowSlotsModal(false)\r\n                    setDeleteSlotModal(true)\r\n                  }}\r\n                  edit={(info) => {\r\n                    setUpdateSlotModalInfo(info)\r\n                    setShowSlotsModal(false)\r\n                    setUpdateSlotModal(true)\r\n                  }}\r\n                  slots={allSlots1}\r\n                  updateInfo={updateSlotModalInfo}\r\n                  locations={allLocations}\r\n                  courses={coursesInDepartment}\r\n                  staff={staffInDepartment1}\r\n                />\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: '15px' }}>\r\n            <Col sm={1}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{slotError}</p>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Assign staff Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={showAssignModal}\r\n        onHide={() => {\r\n          setShowAssignModal(false)\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Assign Staff</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Dropdown>\r\n            <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n              {assignStaffInfo.staffName}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {staffInDepartment1.map((staff) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    onSelect={() => {\r\n                      setAssignStaffInfo({\r\n                        ...assignStaffInfo,\r\n                        staffName: staff.name,\r\n                        staffId: staff._id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    {staff.name}\r\n                  </Dropdown.Item>\r\n                )\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <ClickableSlotList\r\n            slots={availableSlots1}\r\n            handleSelection={handleSelectionAddSlot}\r\n          />\r\n          <Row style={{ marginTop: '10px' }}>\r\n            <Col sm={5}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{assignError}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={5}></Col>\r\n            <Col sm={3}>\r\n              <Button\r\n                onClick={async () => {\r\n                  try {\r\n                    const response = await axios({\r\n                      method: 'post',\r\n                      url: `${backendLink}/slot/assignStaff`,\r\n                      headers: { Authorization: token },\r\n                      data: {\r\n                        id: assignStaffInfo.slotId,\r\n                        staffId: assignStaffInfo.staffId,\r\n                      },\r\n                    })\r\n                    if (response.data.statusCode !== '000')\r\n                      setAssignError(response.data.error)\r\n                    else {\r\n                      setShowAssignModal(false)\r\n                      setAlert(true)\r\n                      setAlertMsg('Staff assigned successfully')\r\n                      setRefresh(refresh + 1)\r\n                    }\r\n                  } catch (err) {\r\n                    setAssignError(err.message)\r\n                  }\r\n                }}\r\n              >\r\n                Assign Staff\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Delete assignment Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={deleteAssignModal}\r\n        onHide={() => {\r\n          setDeleteAssignModal(false)\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Staff Assignment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p style={{ textAlign: 'center', fontSize: '25px' }}>\r\n            Are you sure you want to delete this record?\r\n          </p>\r\n          <Row style={{ marginTop: '20px', marginBottom: '10px' }}>\r\n            <Col md={4}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{deleteAssignError}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}></Col>\r\n            <Col sm={2}>\r\n              <Button\r\n                onClick={async () => {\r\n                  try {\r\n                    const deleteAssignRes = await axios({\r\n                      method: 'delete',\r\n                      url: `${backendLink}/slot/deleteStaff`,\r\n                      headers: { Authorization: token },\r\n                      data: {\r\n                        id: deleteStaffModalInfo.slotId,\r\n                      },\r\n                    })\r\n                    if (deleteAssignRes.data.statusCode !== '000')\r\n                      setDeleteAssignError(deleteAssignRes.data.error)\r\n                    else {\r\n                      setDeleteAssignModal(false)\r\n                      setAlert(true)\r\n                      setAlertMsg('Staff assignment deleted successfully')\r\n                      setRefresh(refresh + 1)\r\n                    }\r\n                  } catch (err) {\r\n                    setDeleteAssignError(err.message)\r\n                  }\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n            <Col sm={2}>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={() => {\r\n                  setDeleteAssignModal(false)\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Delet Slot Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={deleteSlotModal}\r\n        onHide={() => {\r\n          setDeleteSlotModal(false)\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Slot</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p style={{ textAlign: 'center', fontSize: '25px' }}>\r\n            Are you sure you want to delete this record?\r\n          </p>\r\n          <Row style={{ marginTop: '20px', marginBottom: '10px' }}>\r\n            <Col md={4}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{deleteSlotError}</p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}></Col>\r\n            <Col sm={2}>\r\n              <Button\r\n                onClick={async () => {\r\n                  try {\r\n                    const deleteSlotRes = await axios({\r\n                      method: 'delete',\r\n                      url: `${backendLink}/slot/deleteSlot`,\r\n                      headers: { Authorization: token },\r\n                      data: {\r\n                        id: deleteSlotModalInfo,\r\n                        courseId: deleteSlotModalCourse,\r\n                      },\r\n                    })\r\n                    if (deleteSlotRes.data.statusCode !== '000')\r\n                      setDeleteSlotError(deleteSlotRes.data.error)\r\n                    else {\r\n                      setDeleteSlotModal(false)\r\n                      setAlert(true)\r\n                      setAlertMsg('Slot deleted successfully')\r\n                      setRefresh(refresh + 1)\r\n                    }\r\n                  } catch (err) {\r\n                    setDeleteSlotError(err.message)\r\n                  }\r\n                }}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n            <Col sm={2}>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={() => {\r\n                  setDeleteSlotModal(false)\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Add slot Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={addSlotModal}\r\n        onHide={() => {\r\n          setAddSlotModal(false)\r\n          setAddSlotModalInfo({\r\n            day: 'saturday',\r\n            time: 1,\r\n            location: '',\r\n            staffName: '',\r\n            courseName: '',\r\n            type: 'lab',\r\n            staffId: '',\r\n            courseId: '',\r\n            locationId: '',\r\n          })\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Slot</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Day </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {addSlotModalInfo.day}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {days.map((day) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setAddSlotModalInfo({\r\n                            ...addSlotModalInfo,\r\n                            day: day,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {day}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Time </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {addSlotModalInfo.time}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {times.map((time) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setAddSlotModalInfo({\r\n                            ...addSlotModalInfo,\r\n                            time: time,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {time}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Type </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {addSlotModalInfo.type}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {types.map((type) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setAddSlotModalInfo({\r\n                            ...addSlotModalInfo,\r\n                            type: type,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {type}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Staff</p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {addSlotModalInfo.staffName}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {staffInDepartment1.map((staff) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setAddSlotModalInfo({\r\n                            ...addSlotModalInfo,\r\n                            staffId: staff._id,\r\n                            staffName: staff.name,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {staff.name}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Course </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {addSlotModalInfo.courseName}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {coursesInDepartment.map((course) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setAddSlotModalInfo({\r\n                            ...addSlotModalInfo,\r\n                            courseId: course._id,\r\n                            courseName: course.name,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {course.name}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Location </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {addSlotModalInfo.location}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {allLocations.map((location) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setAddSlotModalInfo({\r\n                            ...addSlotModalInfo,\r\n                            location: location.name,\r\n                            locationId: location._id,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {location.name}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={5}></Col>\r\n            <Col sm={1}>\r\n              <Button\r\n                onClick={async () => {\r\n                  try {\r\n                    let data\r\n                    if (addSlotModalInfo.staffId) {\r\n                      data = {\r\n                        type: addSlotModalInfo.type,\r\n                        day: addSlotModalInfo.day,\r\n                        time: addSlotModalInfo.time,\r\n                        locationId: addSlotModalInfo.locationId,\r\n                        courseId: addSlotModalInfo.courseId,\r\n                        staffId: addSlotModalInfo.staffId,\r\n                      }\r\n                    } else {\r\n                      data = {\r\n                        type: addSlotModalInfo.type,\r\n                        day: addSlotModalInfo.day,\r\n                        time: addSlotModalInfo.time,\r\n                        locationId: addSlotModalInfo.locationId,\r\n                        courseId: addSlotModalInfo.courseId,\r\n                      }\r\n                    }\r\n                    const addSlotRes = await axios({\r\n                      data,\r\n                      method: 'POST',\r\n                      url: `${backendLink}/slot/addSlot`,\r\n                      headers: { Authorization: token },\r\n                    })\r\n                    if (addSlotRes.data.statusCode !== '000')\r\n                      setAddSlotError(addSlotRes.data.error)\r\n                    else {\r\n                      setAddSlotModalInfo({\r\n                        day: 'saturday',\r\n                        time: 1,\r\n                        location: '',\r\n                        staffName: '',\r\n                        courseName: '',\r\n                        type: 'lab',\r\n                        staffId: '',\r\n                        courseId: '',\r\n                        locationId: '',\r\n                      })\r\n                      setAddSlotModal(false)\r\n                      setAlert(true)\r\n                      setAlertMsg('Slot added successfully')\r\n                      setRefresh(refresh + 1)\r\n                    }\r\n                  } catch (err) {\r\n                    setAddSlotError(err.message)\r\n                  }\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Col>\r\n            <Col sm={1}></Col>\r\n            <Col sm={1}>\r\n              <Button\r\n                onClick={() => {\r\n                  setAddSlotModal(false)\r\n                  setAddSlotModalInfo({\r\n                    day: 'saturday',\r\n                    time: 1,\r\n                    location: '',\r\n                    staffName: '',\r\n                    courseName: '',\r\n                    type: 'lab',\r\n                    staffId: '',\r\n                    courseId: '',\r\n                    locationId: '',\r\n                  })\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: '10px', marginBottom: '5px' }}>\r\n            <Col md={4}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{addSlotError}</p>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* edit assign Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={editAssignModal}\r\n        onHide={() => {\r\n          setEditAssignModal(false)\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Slot Assignment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Dropdown>\r\n            <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n              {updateStaffModalInfo.staffName}\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n              {staffInDepartment1.map((staff) => {\r\n                return (\r\n                  <Dropdown.Item\r\n                    onSelect={() => {\r\n                      setUpdateStaffModalInfo({\r\n                        ...assignStaffInfo,\r\n                        staffName: staff.name,\r\n                        staffId: staff._id,\r\n                      })\r\n                    }}\r\n                  >\r\n                    {staff.name}\r\n                  </Dropdown.Item>\r\n                )\r\n              })}\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n          <Row style={{ marginTop: '20px' }}>\r\n            <Col sm={3}></Col>\r\n            <Col sm={1}>\r\n              <Button\r\n                onClick={async () => {\r\n                  try {\r\n                    const editAssignRes = await axios({\r\n                      method: 'put',\r\n                      url: `${backendLink}/slot/updateStaff`,\r\n                      headers: { Authorization: token },\r\n                      data: {\r\n                        id: updateStaffSlotId,\r\n                        staffId: updateStaffModalInfo.staffId,\r\n                      },\r\n                    })\r\n                    if (editAssignRes.data.statusCode !== '000')\r\n                      setEditAssignError(editAssignRes.data.error)\r\n                    else {\r\n                      setEditAssignModal(false)\r\n                      setAlert(true)\r\n                      setAlertMsg('Staff updated successfully')\r\n                      setRefresh(refresh + 1)\r\n                    }\r\n                  } catch (err) {\r\n                    setEditAssignError(err.message)\r\n                  }\r\n                }}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Col>\r\n            <Col sm={3}></Col>\r\n            <Col sm={1}>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={() => {\r\n                  setEditAssignModal(false)\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <p style={errorStyle}>{editAssignError}</p>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* update Slot Modal */}\r\n      <Modal\r\n        size='lg'\r\n        show={updateSlotModal}\r\n        onHide={() => {\r\n          setUpdateSlotModal(false)\r\n        }}\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Slot</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Day </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {updateSlotModalInfo.day}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {days.map((day) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setUpdateSlotModalInfo({\r\n                            ...updateSlotModalInfo,\r\n                            day: day,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {day}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Time </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {updateSlotModalInfo.time}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {times.map((time) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setUpdateSlotModalInfo({\r\n                            ...updateSlotModalInfo,\r\n                            time: time,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {time}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Type </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {updateSlotModalInfo.type}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {types.map((type) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setUpdateSlotModalInfo({\r\n                            ...updateSlotModalInfo,\r\n                            type: type,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {type}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Course </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {updateSlotModalInfo.courseName}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {coursesInDepartment.map((course) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setUpdateSlotModalInfo({\r\n                            ...updateSlotModalInfo,\r\n                            courseId: course._id,\r\n                            courseName: course.name,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {course.name}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col sm={2}>\r\n              <p style={titleStyle}>Location </p>\r\n            </Col>\r\n            <Col>\r\n              <Dropdown>\r\n                <Dropdown.Toggle style={{ width: '50%', marginLeft: '24%' }}>\r\n                  {updateSlotModalInfo.location}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                  {allLocations.map((location) => {\r\n                    return (\r\n                      <Dropdown.Item\r\n                        onSelect={() => {\r\n                          setUpdateSlotModalInfo({\r\n                            ...updateSlotModalInfo,\r\n                            location: location.name,\r\n                            locationId: location._id,\r\n                          })\r\n                        }}\r\n                      >\r\n                        {location.name}\r\n                      </Dropdown.Item>\r\n                    )\r\n                  })}\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: '15px' }}>\r\n            <Col sm={5}></Col>\r\n            <Col sm={1}>\r\n              <Button\r\n                onClick={async () => {\r\n                  try {\r\n                    const updateSlotRes = await axios({\r\n                      data: {\r\n                        id: updateSlotModalInfo.slotId,\r\n                        type: updateSlotModalInfo.type,\r\n                        day: updateSlotModalInfo.day,\r\n                        time: updateSlotModalInfo.time,\r\n                        locationId: updateSlotModalInfo.locationId,\r\n                        courseId: updateSlotModalInfo.courseId,\r\n                      },\r\n                      method: 'PUT',\r\n                      url: `${backendLink}/slot/updateSlot`,\r\n                      headers: { Authorization: token },\r\n                    })\r\n                    if (updateSlotRes.data.statusCode !== '000')\r\n                      setUpdateSlotError(updateSlotRes.data.error)\r\n                    else {\r\n                      setUpdateSlotModal(false)\r\n                      setAlert(true)\r\n                      setAlertMsg('Slot updated successfully')\r\n                      setRefresh(refresh + 1)\r\n                    }\r\n                  } catch (err) {\r\n                    setUpdateSlotError(err.message)\r\n                  }\r\n                }}\r\n              >\r\n                Update\r\n              </Button>\r\n            </Col>\r\n            <Col sm={1}></Col>\r\n            <Col sm={1}>\r\n              <Button\r\n                variant='secondary'\r\n                onClick={() => {\r\n                  setUpdateSlotModal(false)\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{ marginTop: '10px', marginBottom: '5px' }}>\r\n            <Col md={4}></Col>\r\n            <Col>\r\n              <p style={errorStyle}>{updateSlotError}</p>\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <Alert\r\n        msg={alertMsg}\r\n        showAlert={alert}\r\n        handleClose={() => {\r\n          setAlert(false)\r\n        }}\r\n        severity='success'\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Slots\r\n","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Pages\\Schedule.js",["783"],"import React, { useState, useEffect } from 'react'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport RequestCard from '../Components/Replacement/RequestCard'\r\nimport ScheduleItem from '../Components/Schedule/ScheduleItem'\r\nimport { day } from '../Constants/StatusCodes'\r\nimport { backendLink } from '../keys_dev'\r\nconst axios = require('axios')\r\n\r\nconst Schedule = (props) => {\r\n  const errorStyle = {\r\n    fontSize: '12px',\r\n    fontWeight: '600',\r\n    color: '#8a0303',\r\n  }\r\n  const token = useSelector((state) => state.token)\r\n  const [error, setError] = useState('')\r\n  const [schedule1, setSchedule] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [replacementRequests, setReplacementRequests] = useState([])\r\n  var scheduleResponse = { data: [] }\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    const fetchSchedule = async () => {\r\n      try {\r\n        scheduleResponse = await axios({\r\n          method: 'GET',\r\n          url: backendLink + '/slot/viewSchedule',\r\n          headers: { Authorization: token },\r\n        })\r\n        if (scheduleResponse.data.statusCode === '000') {\r\n          setSchedule(scheduleResponse.data.slots)\r\n          setReplacementRequests(scheduleResponse.data.ReplacementRequests)\r\n        } else setError(scheduleResponse.data.error)\r\n      } catch (err) {\r\n        setError(err.message)\r\n      }\r\n      setLoading(false)\r\n    }\r\n    fetchSchedule()\r\n  }, [])\r\n\r\n  const [scheduleObj, setScheduleObj] = useState([[], [], [], [], [], []])\r\n\r\n  useEffect(() => {\r\n    var tempSat = []\r\n    schedule1.forEach((item) => {\r\n      if (item.day === day.SATURDAY) tempSat.push(item)\r\n    })\r\n\r\n    var tempSun = []\r\n    schedule1.forEach((item) => {\r\n      if (item.day === day.SUNDAY) tempSun.push(item)\r\n    })\r\n\r\n    var tempMon = []\r\n    schedule1.forEach((item) => {\r\n      if (item.day === day.MONDAY) tempMon.push(item)\r\n    })\r\n\r\n    var tempTues = []\r\n    schedule1.forEach((item) => {\r\n      if (item.day === day.TUESDAY) tempTues.push(item)\r\n    })\r\n\r\n    var tempWed = []\r\n    schedule1.forEach((item) => {\r\n      if (item.day === day.WEDNESDAY) tempWed.push(item)\r\n    })\r\n\r\n    var tempThurs = []\r\n    schedule1.forEach((item) => {\r\n      if (item.day === day.THURSDAY) tempThurs.push(item)\r\n    })\r\n\r\n    var scheduleObjTemp = [[], [], [], [], [], []]\r\n\r\n    scheduleObjTemp[0] = tempSat\r\n    scheduleObjTemp[1] = tempSun\r\n    scheduleObjTemp[2] = tempMon\r\n    scheduleObjTemp[3] = tempTues\r\n    scheduleObjTemp[4] = tempWed\r\n    scheduleObjTemp[5] = tempThurs\r\n\r\n    setScheduleObj(scheduleObjTemp)\r\n    let tempArray = []\r\n    let tempObj = []\r\n    let tempScheduleObj = [...scheduleObjTemp]\r\n    for (var k = 0; k < scheduleObjTemp.length; k++) {\r\n      tempObj[k] = scheduleObjTemp[k]\r\n\r\n      var flag = false\r\n      for (let i = 0; i < scheduleObjTemp[k].length; i++) {\r\n        if (scheduleObjTemp[k][i] !== null) flag = true\r\n      }\r\n      if (!flag || scheduleObjTemp[k].length === 0) {\r\n        tempObj[k] = [null, null, null, null, null]\r\n\r\n        tempScheduleObj[k] = tempObj[k]\r\n      } else {\r\n        for (let i = 0; i < scheduleObjTemp[k].length; i++) {\r\n          for (\r\n            var j = tempArray.length;\r\n            j < scheduleObjTemp[k][i].time - 1;\r\n            j++\r\n          ) {\r\n            tempArray.push(null)\r\n          }\r\n          if (scheduleObjTemp[k][i].time < tempArray.length)\r\n            tempArray[scheduleObjTemp[k][i].time - 1] = scheduleObjTemp[k][i]\r\n          else tempArray.push(scheduleObjTemp[k][i])\r\n        }\r\n        if (tempArray.length < 5) {\r\n          for (var i = tempArray.length; i < 5; i++) tempArray.push(null)\r\n        }\r\n        tempObj[k] = tempArray\r\n\r\n        tempScheduleObj[k] = tempObj[k]\r\n\r\n        tempArray = []\r\n      }\r\n    }\r\n    setScheduleObj(tempScheduleObj)\r\n  }, [schedule1])\r\n  return (\r\n    <div>\r\n      <p\r\n        style={{\r\n          marginLeft: '5vw',\r\n          marginTop: '30px',\r\n          fontSize: '40px',\r\n          color: '#009999',\r\n          marginBottom: '20px',\r\n        }}\r\n      >\r\n        Schedule\r\n      </p>\r\n      {loading ? (\r\n        <p\r\n          style={{\r\n            fontSize: '20px',\r\n            color: '#858585',\r\n            fontWeight: '600',\r\n            marginTop: '20%',\r\n            marginLeft: '30%',\r\n          }}\r\n        >\r\n          Loading...\r\n        </p>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            <Col sm={1}></Col>\r\n            <Col>\r\n              <Row>\r\n                <Col\r\n                  md={2}\r\n                  style={{ marginLeft: '10px', marginBottom: '10px' }}\r\n                ></Col>\r\n                <Col\r\n                  md={2}\r\n                  style={{\r\n                    color: '#010f15',\r\n                    marginLeft: '10px',\r\n                    marginBottom: '10px',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  1st\r\n                </Col>\r\n                <Col\r\n                  md={2}\r\n                  style={{\r\n                    color: '#010f15',\r\n                    marginLeft: '10px',\r\n                    marginBottom: '10px',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  2nd\r\n                </Col>\r\n                <Col\r\n                  md={2}\r\n                  style={{\r\n                    color: '#010f15',\r\n                    marginLeft: '10px',\r\n                    marginBottom: '10px',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  3rd\r\n                </Col>\r\n                <Col\r\n                  md={2}\r\n                  style={{\r\n                    color: '#010f15',\r\n                    marginLeft: '10px',\r\n                    marginBottom: '10px',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  4th\r\n                </Col>\r\n                <Col\r\n                  md={1}\r\n                  style={{\r\n                    color: '#010f15',\r\n                    marginLeft: '10px',\r\n                    marginBottom: '10px',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  5th\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={2} style={{ color: '#010f15', fontWeight: '700' }}>\r\n                  <p style={{ color: '#010f15', fontWeight: '700' }}>\r\n                    Saturday\r\n                  </p>\r\n                </Col>\r\n\r\n                {scheduleObj[0].map((slot) => {\r\n                  if (slot === null)\r\n                    return (\r\n                      <Col md={2}>\r\n                        <ScheduleItem />\r\n                      </Col>\r\n                    )\r\n                  return (\r\n                    <Col md={2}>\r\n                      <ScheduleItem slotData={slot} />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col md={2} style={{ color: '#010f15', fontWeight: '700' }}>\r\n                  <p style={{ color: '#010f15', fontWeight: '700' }}>Sunday</p>\r\n                </Col>\r\n                {scheduleObj[1].map((slot) => {\r\n                  if (slot === null)\r\n                    return (\r\n                      <Col md={2}>\r\n                        <ScheduleItem />\r\n                      </Col>\r\n                    )\r\n                  return (\r\n                    <Col md={2}>\r\n                      <ScheduleItem slotData={slot} />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col md={2} style={{ color: '#010f15', fontWeight: '700' }}>\r\n                  <p style={{ color: '#010f15', fontWeight: '700' }}>Monday</p>\r\n                </Col>\r\n                {scheduleObj[2].map((slot) => {\r\n                  if (slot === null)\r\n                    return (\r\n                      <Col md={2}>\r\n                        <ScheduleItem />\r\n                      </Col>\r\n                    )\r\n                  return (\r\n                    <Col md={2}>\r\n                      <ScheduleItem slotData={slot} />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col md={2}>\r\n                  <p style={{ color: '#010f15', fontWeight: '700' }}>Tuesday</p>\r\n                </Col>\r\n                {scheduleObj[3].map((slot) => {\r\n                  if (slot === null)\r\n                    return (\r\n                      <Col md={2}>\r\n                        <ScheduleItem />\r\n                      </Col>\r\n                    )\r\n                  return (\r\n                    <Col md={2}>\r\n                      <ScheduleItem slotData={slot} />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col md={2} style={{ color: '#010f15', fontWeight: '700' }}>\r\n                  <p style={{ color: '#010f15', fontWeight: '700' }}>\r\n                    Wednesday\r\n                  </p>\r\n                </Col>\r\n                {scheduleObj[4].map((slot) => {\r\n                  if (slot === null)\r\n                    return (\r\n                      <Col md={2}>\r\n                        <ScheduleItem />\r\n                      </Col>\r\n                    )\r\n                  return (\r\n                    <Col md={2}>\r\n                      <ScheduleItem slotData={slot} />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col md={2} style={{ color: '#010f15', fontWeight: '700' }}>\r\n                  <p style={{ color: '#010f15', fontWeight: '700' }}>\r\n                    Thursday\r\n                  </p>\r\n                </Col>\r\n                {scheduleObj[5].map((slot) => {\r\n                  if (slot === null)\r\n                    return (\r\n                      <Col md={2}>\r\n                        <ScheduleItem />\r\n                      </Col>\r\n                    )\r\n                  return (\r\n                    <Col md={2}>\r\n                      <ScheduleItem slotData={slot} />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row style={{ marginTop: '10px', marginBottom: '5px' }}>\r\n                <Col md={4}></Col>\r\n                <Col>\r\n                  <p style={errorStyle}>{error}</p>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <p\r\n            style={{\r\n              marginLeft: '5vw',\r\n              marginTop: '30px',\r\n              fontSize: '40px',\r\n              color: '#009999',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            Replacement Requests\r\n          </p>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            {replacementRequests.map((request) => {\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                    <RequestCard\r\n                      request={request}\r\n                      // reload={reload}\r\n                      // setReload={setReload}\r\n                      schedule={true}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Schedule\r\n","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Layout\\Navbar.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\ReplacementReqList.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\ResetPassModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\ChangeDayReqList.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\LinkingReqList.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\LeaveReqList.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\globalState\\reducers\\index.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\keys_dev.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Layout\\NoResults.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\RequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Layout\\Alert.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\ProfileCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\AddStaffModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\OlderSalariesModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\ManualSigninoutModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\globalState\\actions\\AuthActions.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\EditCourse.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Notifications\\Notification.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AssignCC.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AssignInstructor.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\StaffCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\UpdateInstructor.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AssignStaff.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\UpdateStaff.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\CourseCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\AddCourse.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Constants\\StatusCodes.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\TeachingAssignments.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Schedule\\ScheduleItem.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Department\\AddDepartment.js",["784"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal, Button, Form, Col } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useSelector } from 'react-redux'\r\nimport Alert from '../Layout/Alert'\r\nexport default function AddDepartment(props) {\r\n  const token = useSelector((state) => state.token)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [staff, setStaff] = useState({ val: '', err: '' })\r\n  const [staffMem, setS] = useState([])\r\n  var staffId = ''\r\n  const [fac, setFac] = useState({ val: '', err: '' })\r\n  const [facArr, setFacArr] = useState([])\r\n  var facultyId = ''\r\n  const [globaleError, setge] = useState('')\r\n  const [m, setm] = useState('')\r\n  const [updated, setUpdated] = useState(false)\r\n  const [err, setErr] = useState({\r\n    name: '',\r\n    facultyId: '',\r\n    HODId: '',\r\n  })\r\n\r\n  const [input, setInput] = useState({\r\n    name: props.add ? '' : props.department.name,\r\n    facultyId: props.add ? '' : props.department.facultyId,\r\n    HODId: props.add ? '' : props.department.HODId,\r\n  })\r\n  useEffect(() => {\r\n    setStaff({ val: '', err: '' })\r\n    setFac({ val: '', err: '' })\r\n    setInput({\r\n      name: props.add ? '' : props.department.name,\r\n      facultyId: props.add ? '' : props.department.facultyId,\r\n      HODId: props.add ? '' : props.department.HODId,\r\n    })\r\n    axios({\r\n      url: `${backendLink}/staff/viewAllProfiles`,\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!props.add) {\r\n          if (props.department.HODId) {\r\n            const oldsID = res.data.profiles.find(\r\n              (profile) => profile._id === props.department.HODId\r\n            )\r\n            setStaff({ val: oldsID.name, err: '' })\r\n          }\r\n        }\r\n        if (res.data.statusCode === '000') {\r\n          let staff\r\n          staff = res.data.profiles\r\n          setS(staff)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n\r\n    axios({\r\n      url: `${backendLink}/faculty/viewAllFaculties`,\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (!props.add) {\r\n          if (props.department.facultyId) {\r\n            const oldFac = res.data.allFaculties.find(\r\n              (faculty) => faculty._id === props.department.facultyId\r\n            )\r\n            setFac({ val: oldFac.name, err: '' })\r\n          }\r\n        }\r\n\r\n        if (res.data.statusCode === '000') {\r\n          let facul\r\n          facul = res.data.allFaculties\r\n          setFacArr(facul)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [props])\r\n  const handleDone = () => {\r\n    if (!input.name) setErr({ ...err, name: 'Department name is required*' })\r\n    if (staff.val !== '') {\r\n      for (let i = 0; i < staffMem.length; i++) {\r\n        if (staffMem[i].name === staff.val) {\r\n          staffId = staffMem[i]._id\r\n          break\r\n        }\r\n      }\r\n    }\r\n    if (fac.val !== '') {\r\n      for (let i = 0; i < facArr.length; i++) {\r\n        if (facArr[i].name === fac.val) {\r\n          facultyId = facArr[i]._id\r\n          break\r\n        }\r\n      }\r\n    }\r\n    if (!props.add) {\r\n      setm('Department Updated Successfully')\r\n      let data\r\n      data = {\r\n        id: props.id,\r\n      }\r\n      if (input.name !== props.department.name) {\r\n        data.name = input.name\r\n      }\r\n      if (staff.val && staffId !== props.department.HODId) {\r\n        data.HODId = staffId\r\n      }\r\n      if (fac.val && facultyId !== props.department.facultyId) {\r\n        data.facultyId = facultyId\r\n      }\r\n      axios({\r\n        url: `${backendLink}/department/updateDepartment`,\r\n        method: 'PUT',\r\n        data,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res)\r\n          if (res.data.statusCode === '000') {\r\n            setUpdated(true)\r\n            props.setReload(!props.reload)\r\n            setShowAlert(true)\r\n            handleClose()\r\n          } else if (\r\n            res.data.statusCode === '001' ||\r\n            res.data.statusCode === '007' ||\r\n            res.data.statusCode === '022'\r\n          ) {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '029') {\r\n            setge(res.data.error)\r\n          } else if (\r\n            res.data.statusCode === '004' ||\r\n            res.data.statusCode === '003'\r\n          ) {\r\n            setge(res.data.error)\r\n          } else if (res.data.statusCode === '005') {\r\n            setErr({ ...err, HODId: res.data.error })\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    } else {\r\n      setm('Depatment Added Successfully')\r\n      let data\r\n      data = {\r\n        name: input.name,\r\n        facultyId: facultyId,\r\n      }\r\n      if (staff.val) {\r\n        data.HODId = staffId\r\n      }\r\n      axios({\r\n        url: `${backendLink}/department/addDepartment`,\r\n        method: 'POST',\r\n        data,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.statusCode === '000') {\r\n            props.setReload(!props.reload)\r\n            setShowAlert(true)\r\n            handleClose()\r\n          } else if (\r\n            res.data.statusCode === '001' ||\r\n            res.data.statusCode === '007'\r\n          ) {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '029') {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '022') {\r\n            setErr({ ...err, facultyId: res.data.error })\r\n          } else if (\r\n            res.data.statusCode === '004' ||\r\n            res.data.statusCode === '003'\r\n          ) {\r\n            setge(res.data.error)\r\n          } else if (res.data.statusCode === '005') {\r\n            setge(res.data.error)\r\n          } else if (res.data.statusCode === '029') {\r\n            setge(res.data.error)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  const handleClose = () => {\r\n    if (props.add) {\r\n      setStaff({ val: '', err: '' })\r\n      setFac({ val: '', err: '' })\r\n      setInput({\r\n        name: '',\r\n        facultyId: '',\r\n        HODId: '',\r\n      })\r\n    } else if (!updated) {\r\n      setInput({\r\n        name: props.department.name,\r\n        HODId: props.department.HODId,\r\n        facultyId: props.department.facultyId,\r\n      })\r\n      setStaff({ val: '', err: '' })\r\n      setFac({ val: '', err: '' })\r\n    }\r\n    setErr({\r\n      name: '',\r\n      facultyId: '',\r\n      HODId: '',\r\n    })\r\n    setge('')\r\n    setFacArr([])\r\n    setS([])\r\n    props.onHide()\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={handleClose}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          {props.add ? (\r\n            <Modal.Title id='contained-modal-title-vcenter'>\r\n              Add Department\r\n            </Modal.Title>\r\n          ) : (\r\n            <Modal.Title id='contained-modal-title-vcenter'>\r\n              Update Department\r\n            </Modal.Title>\r\n          )}\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form style={{ padding: '1vw' }}>\r\n            <Form.Row style={{ paddingBottom: '1vw' }}>\r\n              <Col xs='6'>\r\n                <Form.Label>Department Name*</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  onChange={(e) => {\r\n                    setInput({ ...input, name: e.target.value })\r\n                    setErr({ ...err, name: '' })\r\n                  }}\r\n                  value={input.name}\r\n                />\r\n                {err.name ? (\r\n                  <Form.Text className='error'>{err.name}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n              <Col xs='5'>\r\n                <Form.Label>Faculty Name*</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  onChange={(e) => {\r\n                    setFac({ val: e.target.value, err: '' })\r\n                  }}\r\n                  defaultValue='Choose...'\r\n                  value={fac.val}\r\n                >\r\n                  <option hidden>Choose...</option>\r\n                  {facArr.map((f) => {\r\n                    return <option>{f.name}</option>\r\n                  })}{' '}\r\n                </Form.Control>\r\n                {err.facultyId ? (\r\n                  <Form.Text className='error'>{err.facultyId}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n              <Col xs='6'>\r\n                <Form.Label>HOD Name</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  onChange={(e) => {\r\n                    setStaff({ val: e.target.value, err: '' })\r\n                  }}\r\n                  defaultValue='Choose...'\r\n                  value={staff.val}\r\n                >\r\n                  <option hidden>Choose...</option>\r\n                  {staffMem.map((mem) => {\r\n                    return mem.type === 'hod' ? <option>{mem.name}</option> : ''\r\n                  })}{' '}\r\n                </Form.Control>\r\n                {err.HODId ? (\r\n                  <Form.Text className='error'>{err.HODId}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n            </Form.Row>\r\n            <p className='error'>{globaleError}</p>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={handleClose}\r\n            style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n          >\r\n            Close\r\n          </Button>\r\n          {props.add ? (\r\n            <Button\r\n              onClick={handleDone}\r\n              style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n            >\r\n              Add\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={handleDone}\r\n              style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n            >\r\n              Update\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Alert\r\n        showAlert={showAlert}\r\n        msg={m}\r\n        severity='success'\r\n        handleClose={() => setShowAlert(false)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\ClickableSlotList.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Department\\Department.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AnnualSendLeaveReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\CompensationSendLeaveReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\globalState\\reducers\\SigninReducer.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\MaternitySendLeaveReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\SickSendLeaveReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AccidentalSendLeaveReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\CompensationRequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\SickRequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AccidentalRequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AnnualRequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\MaternityRequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\SendLinkingReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\RequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\SendChangeDayReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\RequestCard.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\SendReplacementReq.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\RejectRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Profiles\\DeleteProfileModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\ClickableSlot.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Department\\DeleteDepartment.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Slots\\TeachingAssignmentRow.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\DeleteCourse.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\RejectRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\AcceptRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Leave\\CancelRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\DeleteStaff.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Courses\\DeleteInstructor.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Notifications\\DeleteNotification.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\AcceptRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Replacement\\CancelRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\RejectRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\AcceptRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Linking\\CancelRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\RejectRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\AcceptRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\ChangeDay\\CancelRequestModal.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Attendance\\ListView.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Faculties\\AddFaculty.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Faculties\\Faculty.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\AddLocation.js",["785"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal, Button, Form, Col } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useSelector } from 'react-redux'\r\nimport Alert from '../Layout/Alert'\r\nexport default function AddLocation(props) {\r\n  const token = useSelector((state) => state.token)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [m, setm] = useState('')\r\n  const [globaleError, setge] = useState('')\r\n  const [updated, setUpdated] = useState(false)\r\n  const [err, setErr] = useState({\r\n    name: '',\r\n    type: '',\r\n    capacity: '',\r\n  })\r\n\r\n  const [input, setInput] = useState({\r\n    name: props.add ? '' : props.location.name,\r\n    type: props.add ? '' : props.location.type,\r\n    capacity: props.add ? '' : props.location.capacity,\r\n  })\r\n\r\n  useEffect(() => {\r\n    setInput({\r\n      name: props.add ? '' : props.location.name,\r\n      type: props.add ? '' : props.location.type,\r\n      capacity: props.add ? '' : props.location.capacity,\r\n    })\r\n  }, [props])\r\n\r\n  const handleDone = () => {\r\n    setge('')\r\n    if (!input.name) setErr({ ...err, name: 'Location name is required*' })\r\n\r\n    //numberOfStudents: input.numberOfStudents,\r\n    //building: input.building,\r\n\r\n    if (!props.add) {\r\n      setm('Location Updated Successfully')\r\n      let data\r\n      data = {\r\n        locationId: props.id,\r\n        location: {},\r\n      }\r\n      if (input.name !== '' && input.name !== props.location.name) {\r\n        data.location.name = input.name\r\n      }\r\n      if (input.type !== '' && input.type !== props.location.type) {\r\n        data.location.type = input.type\r\n      }\r\n      if (input.capacity !== props.location.capacity) {\r\n        data.location.capacity = input.capacity\r\n      }\r\n      axios({\r\n        url: `${backendLink}/location/updateLocation`,\r\n        method: 'PUT',\r\n        data,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res)\r\n          if (res.data.statusCode === '000') {\r\n            setUpdated(true)\r\n            props.setReload(!props.reload)\r\n            setShowAlert(true)\r\n            handleClose()\r\n          } else if (\r\n            res.data.statusCode === '001' ||\r\n            res.data.statusCode === '007'\r\n          ) {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '029') {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '004') {\r\n            setge(res.data.error)\r\n          } else if (res.data.statusCode === '005') {\r\n            setge(res.data.error)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    } else {\r\n      setm('Location Added Successfully')\r\n      let data\r\n      data = {\r\n        location: {\r\n          name: input.name,\r\n          type: input.type,\r\n        },\r\n      }\r\n      if (input.capacity !== '') {\r\n        data.location.capacity = input.capacity\r\n      }\r\n      axios({\r\n        url: `${backendLink}/location/addLocation`,\r\n        method: 'POST',\r\n        data,\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.statusCode === '000') {\r\n            props.setReload(!props.reload)\r\n            setShowAlert(true)\r\n            handleClose()\r\n          } else if (\r\n            res.data.statusCode === '001' ||\r\n            res.data.statusCode === '007'\r\n          ) {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '029') {\r\n            setErr({ ...err, name: res.data.error })\r\n          } else if (res.data.statusCode === '004') {\r\n            setge(res.data.error)\r\n          } else if (res.data.statusCode === '005') {\r\n            setge(res.data.error)\r\n          } else if (res.data.statusCode === '003') {\r\n            setge(res.data.error)\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  const handleClose = () => {\r\n    setErr({\r\n      name: '',\r\n      type: '',\r\n      capacity: '',\r\n    })\r\n    setge('')\r\n    props.onHide()\r\n    setInput({\r\n      name: props.add ? '' : props.location.name,\r\n      type: props.add ? '' : props.location.type,\r\n      capacity: props.add ? '' : props.location.capacity,\r\n    })\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={handleClose}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          {props.add ? (\r\n            <Modal.Title id='contained-modal-title-vcenter'>\r\n              Add Location\r\n            </Modal.Title>\r\n          ) : (\r\n            <Modal.Title id='contained-modal-title-vcenter'>\r\n              Update Location\r\n            </Modal.Title>\r\n          )}\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form style={{ padding: '1vw' }}>\r\n            <Form.Row style={{ paddingBottom: '1vw' }}>\r\n              <Col xs='6'>\r\n                <Form.Label>Location Name*</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  onChange={(e) => {\r\n                    setInput({ ...input, name: e.target.value })\r\n                    setErr({ ...err, name: '' })\r\n                  }}\r\n                  value={input.name}\r\n                />\r\n                {err.name ? (\r\n                  <Form.Text className='error'>{err.name}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n              <Col xs='5'>\r\n                <Form.Label>Type*</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  onChange={(e) => {\r\n                    setInput({ ...input, type: e.target.value })\r\n                    setErr({ ...err, type: '' })\r\n                  }}\r\n                  value={input.type}\r\n                />\r\n                {err.type ? (\r\n                  <Form.Text className='error'>{err.type}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n              <Col xs='6'>\r\n                <Form.Label>Capacity*</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  onChange={(e) => {\r\n                    setInput({ ...input, capacity: e.target.value })\r\n                    setErr({ ...err, capacity: '' })\r\n                  }}\r\n                  value={input.capacity}\r\n                />\r\n                {err.capacity ? (\r\n                  <Form.Text className='error'>{err.capacity}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n            </Form.Row>\r\n            <p className='error'>{globaleError}</p>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={handleClose}\r\n            style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n          >\r\n            Close\r\n          </Button>\r\n          {props.add ? (\r\n            <Button\r\n              onClick={handleDone}\r\n              style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n            >\r\n              Add\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={handleDone}\r\n              style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n            >\r\n              Update\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Alert\r\n        showAlert={showAlert}\r\n        msg={m}\r\n        severity='success'\r\n        handleClose={() => setShowAlert(false)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\AssignStaff.js",["786","787"],"import React, { useState, useEffect } from 'react'\r\nimport { Modal, Button, Form, Col } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { backendLink } from '../../keys_dev'\r\nimport { useSelector } from 'react-redux'\r\nimport Alert from '../Layout/Alert'\r\nexport default function AssignStaff(props) {\r\n  const [staff, setStaff] = useState({ val: '', err: '' })\r\n  const [loc, setLoc] = useState({ val: '', err: '' })\r\n  var staffId = ''\r\n  var locationId = ''\r\n  const [staffMem, setS] = useState([])\r\n  const [locArr, setLA] = useState([])\r\n  const token = useSelector((state) => state.token)\r\n  const [showAlert, setShowAlert] = useState(false)\r\n  const [globaleError, setge] = useState('')\r\n  const [updated, setUpdated] = useState(false)\r\n  const [err, setErr] = useState({\r\n    staffId: '',\r\n    locationId: '',\r\n  })\r\n\r\n  const [input, setInput] = useState({\r\n    staffId: '',\r\n    locationId: '',\r\n  })\r\n  useEffect(() => {\r\n    setLA(props.location)\r\n    axios({\r\n      url: `${backendLink}/staff/viewAllProfiles`,\r\n      method: 'GET',\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.statusCode === '000') {\r\n          let staff\r\n          staff = res.data.profiles\r\n          setS(staff)\r\n        }\r\n      })\r\n      .catch((err) => {})\r\n  }, [token, props])\r\n\r\n  const handleDone = () => {\r\n    if (staff.val !== '') {\r\n      for (let i = 0; i < staffMem.length; i++) {\r\n        if (staffMem[i].name === staff.val) {\r\n          staffId = staffMem[i]._id\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (loc.val !== '') {\r\n      for (let i = 0; i < props.location.length; i++) {\r\n        if (props.location[i].name === loc.val) {\r\n          locationId = props.location[i]._id\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    //numberOfStudents: input.numberOfStudents,\r\n    //building: input.building,\r\n    let data\r\n    data = {\r\n      staffId: staffId,\r\n      locationId: locationId,\r\n    }\r\n    axios({\r\n      url: `${backendLink}/location/assignOffice`,\r\n      method: 'PUT',\r\n      data,\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.data.statusCode === '000') {\r\n          setUpdated(true)\r\n          props.setReload(!props.reload)\r\n          setShowAlert(true)\r\n          handleClose()\r\n        } else if (\r\n          res.data.statusCode === '001' ||\r\n          res.data.statusCode === '007'\r\n        ) {\r\n          setge(res.data.error)\r\n        } else if (res.data.statusCode === '026') {\r\n          setge(res.data.error)\r\n        } else if (res.data.statusCode === '027') {\r\n          setErr({ ...err, locationId: res.data.error })\r\n        } else if (res.data.statusCode === '012') {\r\n          setErr({ ...err, locationId: res.data.error })\r\n        } else if (res.data.statusCode === '022') {\r\n          if (res.data.error.includes('location')) {\r\n            setErr({ ...err, locationId: res.data.error })\r\n          } else {\r\n            setErr({ ...err, staffId: res.data.error })\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  const handleClose = () => {\r\n    if (props.add) {\r\n      setInput({\r\n        staffId: '',\r\n        locationId: '',\r\n      })\r\n    } else if (!updated) {\r\n      setInput({\r\n        staffId: '',\r\n        locationId: '',\r\n      })\r\n    }\r\n    setErr({\r\n      staffId: '',\r\n      locationId: '',\r\n    })\r\n    setge('')\r\n    setLA([])\r\n    setS([])\r\n    setLoc('')\r\n    setStaff('')\r\n    props.onHide()\r\n  }\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={handleClose}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton onHide={handleClose}>\r\n          <Modal.Title id='contained-modal-title-vcenter'>\r\n            Assign Office\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form style={{ padding: '1vw' }}>\r\n            <Form.Row style={{ paddingBottom: '1vw' }}>\r\n              <Col xs='6'>\r\n                <Form.Label>Location ID*</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  onChange={(e) => {\r\n                    setLoc({ val: e.target.value, err: '' })\r\n                  }}\r\n                  defaultValue='Choose...'\r\n                  value={loc.val}\r\n                >\r\n                  <option hidden>Choose...</option>\r\n                  {locArr.map((loco) => {\r\n                    return loco.type == 'office' ? (\r\n                      <option>{loco.name}</option>\r\n                    ) : (\r\n                      ''\r\n                    )\r\n                  })}{' '}\r\n                </Form.Control>\r\n                {err.locationId ? (\r\n                  <Form.Text className='error'>{err.locationId}</Form.Text>\r\n                ) : (\r\n                  <Form.Text>&nbsp;</Form.Text>\r\n                )}\r\n              </Col>\r\n              <Col xs='6'>\r\n                <Form.Label>Staff Member*</Form.Label>\r\n                <Form.Control\r\n                  as='select'\r\n                  onChange={(e) => {\r\n                    setStaff({ val: e.target.value, err: '' })\r\n                  }}\r\n                  defaultValue='Choose...'\r\n                  value={staff.val}\r\n                >\r\n                  <option hidden>Choose</option>\r\n                  {staffMem.map((mem) => {\r\n                    return <option>{mem.name}</option>\r\n                  })}{' '}\r\n                </Form.Control>\r\n              </Col>\r\n            </Form.Row>\r\n            <p className='error'>{globaleError}</p>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={handleClose}\r\n            style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n          >\r\n            Close\r\n          </Button>\r\n\r\n          <Button\r\n            onClick={handleDone}\r\n            style={{ background: 'rgba(1, 155, 157, 1)' }}\r\n          >\r\n            Assign\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Alert\r\n        showAlert={showAlert}\r\n        msg={'Staff Assigned successfully'}\r\n        severity='success'\r\n        handleClose={() => setShowAlert(false)}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Faculties\\DeleteFaculty.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Attendance\\ListViewRow.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\Location.js",[],"C:\\Users\\mosta\\OneDrive\\Desktop\\ACL\\client\\src\\Components\\Location\\DeleteLocation.js",[],{"ruleId":"788","severity":1,"message":"789","line":26,"column":28,"nodeType":"790","endLine":30,"endColumn":11},{"ruleId":"788","severity":1,"message":"791","line":101,"column":6,"nodeType":"792","endLine":101,"endColumn":8,"suggestions":"793"},{"ruleId":"788","severity":1,"message":"794","line":130,"column":6,"nodeType":"792","endLine":130,"endColumn":16,"suggestions":"795"},{"ruleId":"788","severity":1,"message":"796","line":319,"column":6,"nodeType":"792","endLine":319,"endColumn":15,"suggestions":"797"},{"ruleId":"798","severity":1,"message":"799","line":23,"column":10,"nodeType":"800","messageId":"801","endLine":23,"endColumn":15},{"ruleId":"802","severity":1,"message":"803","line":162,"column":38,"nodeType":"804","messageId":"805","endLine":162,"endColumn":40},{"ruleId":"798","severity":1,"message":"806","line":12,"column":10,"nodeType":"800","messageId":"801","endLine":12,"endColumn":17},{"ruleId":"788","severity":1,"message":"807","line":90,"column":6,"nodeType":"792","endLine":90,"endColumn":13,"suggestions":"808"},{"ruleId":"809","replacedBy":"810"},{"ruleId":"811","replacedBy":"812"},{"ruleId":"788","severity":1,"message":"791","line":101,"column":6,"nodeType":"792","endLine":101,"endColumn":8,"suggestions":"813"},{"ruleId":"788","severity":1,"message":"794","line":130,"column":6,"nodeType":"792","endLine":130,"endColumn":16,"suggestions":"814"},{"ruleId":"788","severity":1,"message":"796","line":319,"column":6,"nodeType":"792","endLine":319,"endColumn":15,"suggestions":"815"},{"ruleId":"788","severity":1,"message":"789","line":26,"column":28,"nodeType":"790","endLine":30,"endColumn":11},{"ruleId":"788","severity":1,"message":"807","line":90,"column":6,"nodeType":"792","endLine":90,"endColumn":13,"suggestions":"816"},{"ruleId":"798","severity":1,"message":"806","line":12,"column":10,"nodeType":"800","messageId":"801","endLine":12,"endColumn":17},{"ruleId":"798","severity":1,"message":"799","line":23,"column":10,"nodeType":"800","messageId":"801","endLine":23,"endColumn":15},{"ruleId":"802","severity":1,"message":"803","line":162,"column":38,"nodeType":"804","messageId":"805","endLine":162,"endColumn":40},"react-hooks/exhaustive-deps","Assignments to the 'scheduleResponse' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","React Hook useEffect has a missing dependency: 'fetchAttendanceNamesAndIds'. Either include it or remove the dependency array.","ArrayExpression",["817"],"React Hook useEffect has missing dependencies: 'allAttendanceRecords', 'attendanceRecords', and 'filtering'. Either include them or remove the dependency array.",["818"],"React Hook useEffect has missing dependencies: 'fetchAllSlots', 'fetchAvailableSlots', 'fetchCoursesInDepartment', 'fetchLocations', 'fetchStaffInDepartment', and 'fetchTeachingAssignments'. Either include them or remove the dependency array.",["819"],"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'updated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["820"],"no-native-reassign",["821"],"no-negated-in-lhs",["822"],["823"],["824"],["825"],["826"],{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},"no-global-assign","no-unsafe-negation",{"desc":"827","fix":"835"},{"desc":"829","fix":"836"},{"desc":"831","fix":"837"},{"desc":"833","fix":"838"},"Update the dependencies array to be: [fetchAttendanceNamesAndIds]",{"range":"839","text":"840"},"Update the dependencies array to be: [allAttendanceRecords, attendanceRecords, filtering, monthStr]",{"range":"841","text":"842"},"Update the dependencies array to be: [fetchAllSlots, fetchAvailableSlots, fetchCoursesInDepartment, fetchLocations, fetchStaffInDepartment, fetchTeachingAssignments, refresh]",{"range":"843","text":"844"},"Update the dependencies array to be: [props, token]",{"range":"845","text":"846"},{"range":"847","text":"840"},{"range":"848","text":"842"},{"range":"849","text":"844"},{"range":"850","text":"846"},[3641,3643],"[fetchAttendanceNamesAndIds]",[4535,4545],"[allAttendanceRecords, attendanceRecords, filtering, monthStr]",[10706,10715],"[fetchAllSlots, fetchAvailableSlots, fetchCoursesInDepartment, fetchLocations, fetchStaffInDepartment, fetchTeachingAssignments, refresh]",[2746,2753],"[props, token]",[3641,3643],[4535,4545],[10706,10715],[2746,2753]]